[2024-04-23T17:21:54.916509+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-23T17:21:54.918343+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T17:21:57.079696+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T17:21:57.080334+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-23T17:21:57.082386+05:30] doctrine.DEBUG: Executing statement: CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at DATETIME DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version)) DEFAULT CHARACTER SET utf8 COLLATE `utf8_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at DATETIME DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version)) DEFAULT CHARACTER SET utf8 COLLATE `utf8_unicode_ci` ENGINE = InnoDB"} []
[2024-04-23T17:21:57.090470+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-23T17:21:57.091085+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-23T17:21:57.091254+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-23T17:21:57.093262+05:30] doctrine.DEBUG: Beginning transaction [] []
[2024-04-23T17:21:57.104509+05:30] doctrine.DEBUG: Executing query: CREATE TABLE category (id BINARY(16) NOT NULL COMMENT '(DC2Type:uuid)', user_id BINARY(16) NOT NULL COMMENT '(DC2Type:uuid)', vault_id BINARY(16) NOT NULL COMMENT '(DC2Type:uuid)', data LONGTEXT NOT NULL, INDEX IDX_64C19C1A76ED395 (user_id), INDEX IDX_64C19C158AC2DF8 (vault_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE category (id BINARY(16) NOT NULL COMMENT '(DC2Type:uuid)', user_id BINARY(16) NOT NULL COMMENT '(DC2Type:uuid)', vault_id BINARY(16) NOT NULL COMMENT '(DC2Type:uuid)', data LONGTEXT NOT NULL, INDEX IDX_64C19C1A76ED395 (user_id), INDEX IDX_64C19C158AC2DF8 (vault_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB"} []
[2024-04-23T17:21:57.108841+05:30] doctrine.DEBUG: Executing query: CREATE TABLE login (id BINARY(16) NOT NULL COMMENT '(DC2Type:uuid)', user_id BINARY(16) NOT NULL COMMENT '(DC2Type:uuid)', vault_id BINARY(16) NOT NULL COMMENT '(DC2Type:uuid)', category_id BINARY(16) DEFAULT NULL COMMENT '(DC2Type:uuid)', data LONGTEXT NOT NULL, INDEX IDX_AA08CB10A76ED395 (user_id), INDEX IDX_AA08CB1058AC2DF8 (vault_id), INDEX IDX_AA08CB1012469DE2 (category_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE login (id BINARY(16) NOT NULL COMMENT '(DC2Type:uuid)', user_id BINARY(16) NOT NULL COMMENT '(DC2Type:uuid)', vault_id BINARY(16) NOT NULL COMMENT '(DC2Type:uuid)', category_id BINARY(16) DEFAULT NULL COMMENT '(DC2Type:uuid)', data LONGTEXT NOT NULL, INDEX IDX_AA08CB10A76ED395 (user_id), INDEX IDX_AA08CB1058AC2DF8 (vault_id), INDEX IDX_AA08CB1012469DE2 (category_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB"} []
[2024-04-23T17:21:57.113420+05:30] doctrine.DEBUG: Executing query: CREATE TABLE note (id BINARY(16) NOT NULL COMMENT '(DC2Type:uuid)', user_id BINARY(16) NOT NULL COMMENT '(DC2Type:uuid)', vault_id BINARY(16) NOT NULL COMMENT '(DC2Type:uuid)', category_id BINARY(16) DEFAULT NULL COMMENT '(DC2Type:uuid)', data LONGTEXT NOT NULL, INDEX IDX_CFBDFA14A76ED395 (user_id), INDEX IDX_CFBDFA1458AC2DF8 (vault_id), INDEX IDX_CFBDFA1412469DE2 (category_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE note (id BINARY(16) NOT NULL COMMENT '(DC2Type:uuid)', user_id BINARY(16) NOT NULL COMMENT '(DC2Type:uuid)', vault_id BINARY(16) NOT NULL COMMENT '(DC2Type:uuid)', category_id BINARY(16) DEFAULT NULL COMMENT '(DC2Type:uuid)', data LONGTEXT NOT NULL, INDEX IDX_CFBDFA14A76ED395 (user_id), INDEX IDX_CFBDFA1458AC2DF8 (vault_id), INDEX IDX_CFBDFA1412469DE2 (category_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB"} []
[2024-04-23T17:21:57.117384+05:30] doctrine.DEBUG: Executing query: CREATE TABLE user (id BINARY(16) NOT NULL COMMENT '(DC2Type:uuid)', first_name VARCHAR(25) NOT NULL, last_name VARCHAR(25) NOT NULL, username VARCHAR(25) NOT NULL, email VARCHAR(50) NOT NULL, password VARCHAR(255) NOT NULL, roles JSON NOT NULL, registered_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D649E7927C74 (email), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE user (id BINARY(16) NOT NULL COMMENT '(DC2Type:uuid)', first_name VARCHAR(25) NOT NULL, last_name VARCHAR(25) NOT NULL, username VARCHAR(25) NOT NULL, email VARCHAR(50) NOT NULL, password VARCHAR(255) NOT NULL, roles JSON NOT NULL, registered_at DATETIME NOT NULL, UNIQUE INDEX UNIQ_8D93D649E7927C74 (email), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB"} []
[2024-04-23T17:21:57.120462+05:30] doctrine.DEBUG: Executing query: CREATE TABLE vault (id BINARY(16) NOT NULL COMMENT '(DC2Type:uuid)', user_id BINARY(16) NOT NULL COMMENT '(DC2Type:uuid)', data LONGTEXT NOT NULL, INDEX IDX_FF304921A76ED395 (user_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE vault (id BINARY(16) NOT NULL COMMENT '(DC2Type:uuid)', user_id BINARY(16) NOT NULL COMMENT '(DC2Type:uuid)', data LONGTEXT NOT NULL, INDEX IDX_FF304921A76ED395 (user_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB"} []
[2024-04-23T17:21:57.124433+05:30] doctrine.DEBUG: Executing query: ALTER TABLE category ADD CONSTRAINT FK_64C19C1A76ED395 FOREIGN KEY (user_id) REFERENCES user (id) {"sql":"ALTER TABLE category ADD CONSTRAINT FK_64C19C1A76ED395 FOREIGN KEY (user_id) REFERENCES user (id)"} []
[2024-04-23T17:21:57.133709+05:30] doctrine.DEBUG: Executing query: ALTER TABLE category ADD CONSTRAINT FK_64C19C158AC2DF8 FOREIGN KEY (vault_id) REFERENCES vault (id) {"sql":"ALTER TABLE category ADD CONSTRAINT FK_64C19C158AC2DF8 FOREIGN KEY (vault_id) REFERENCES vault (id)"} []
[2024-04-23T17:21:57.140506+05:30] doctrine.DEBUG: Executing query: ALTER TABLE login ADD CONSTRAINT FK_AA08CB10A76ED395 FOREIGN KEY (user_id) REFERENCES user (id) {"sql":"ALTER TABLE login ADD CONSTRAINT FK_AA08CB10A76ED395 FOREIGN KEY (user_id) REFERENCES user (id)"} []
[2024-04-23T17:21:57.148339+05:30] doctrine.DEBUG: Executing query: ALTER TABLE login ADD CONSTRAINT FK_AA08CB1058AC2DF8 FOREIGN KEY (vault_id) REFERENCES vault (id) {"sql":"ALTER TABLE login ADD CONSTRAINT FK_AA08CB1058AC2DF8 FOREIGN KEY (vault_id) REFERENCES vault (id)"} []
[2024-04-23T17:21:57.156533+05:30] doctrine.DEBUG: Executing query: ALTER TABLE login ADD CONSTRAINT FK_AA08CB1012469DE2 FOREIGN KEY (category_id) REFERENCES category (id) {"sql":"ALTER TABLE login ADD CONSTRAINT FK_AA08CB1012469DE2 FOREIGN KEY (category_id) REFERENCES category (id)"} []
[2024-04-23T17:21:57.164482+05:30] doctrine.DEBUG: Executing query: ALTER TABLE note ADD CONSTRAINT FK_CFBDFA14A76ED395 FOREIGN KEY (user_id) REFERENCES user (id) {"sql":"ALTER TABLE note ADD CONSTRAINT FK_CFBDFA14A76ED395 FOREIGN KEY (user_id) REFERENCES user (id)"} []
[2024-04-23T17:21:57.178102+05:30] doctrine.DEBUG: Executing query: ALTER TABLE note ADD CONSTRAINT FK_CFBDFA1458AC2DF8 FOREIGN KEY (vault_id) REFERENCES vault (id) {"sql":"ALTER TABLE note ADD CONSTRAINT FK_CFBDFA1458AC2DF8 FOREIGN KEY (vault_id) REFERENCES vault (id)"} []
[2024-04-23T17:21:57.185850+05:30] doctrine.DEBUG: Executing query: ALTER TABLE note ADD CONSTRAINT FK_CFBDFA1412469DE2 FOREIGN KEY (category_id) REFERENCES category (id) {"sql":"ALTER TABLE note ADD CONSTRAINT FK_CFBDFA1412469DE2 FOREIGN KEY (category_id) REFERENCES category (id)"} []
[2024-04-23T17:21:57.193174+05:30] doctrine.DEBUG: Executing query: ALTER TABLE vault ADD CONSTRAINT FK_FF304921A76ED395 FOREIGN KEY (user_id) REFERENCES user (id) {"sql":"ALTER TABLE vault ADD CONSTRAINT FK_FF304921A76ED395 FOREIGN KEY (user_id) REFERENCES user (id)"} []
[2024-04-23T17:21:57.200084+05:30] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20211026103307","2":"2024-04-23 17:21:57","3":106}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20211026103307","2":"2024-04-23 17:21:57","3":106},"types":{"1":2,"2":2,"3":1}} []
[2024-04-23T17:21:57.201891+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-23T17:33:51.055981+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-23T17:33:51.058611+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T17:33:51.059940+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-23T17:33:51.060385+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T17:33:51.060592+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-23T17:33:51.065076+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T17:33:51.065312+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-23T17:33:51.065732+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T17:33:51.065867+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-23T17:33:51.066100+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-23T17:33:51.067260+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T17:33:51.067452+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-23T17:33:51.068371+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-23T17:33:51.070106+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T17:33:51.112735+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-23T17:33:51.115201+05:30] request.INFO: Matched route "authentication_register". {"route":"authentication_register","route_parameters":{"_route":"authentication_register","_controller":"App\\Controller\\RegistrationController:register"},"request_uri":"http://localhost:8000/authentication/register","method":"POST"} []
[2024-04-23T17:33:51.120218+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-23T17:33:51.120271+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-23T17:33:51.120547+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-23T17:33:51.124068+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-23T17:33:51.124504+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T17:33:51.124684+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-23T17:33:51.124970+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T17:33:51.125069+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-23T17:33:51.125392+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T17:33:51.125495+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-23T17:33:51.125820+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T17:33:51.125931+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-23T17:33:51.126187+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-23T17:33:51.127093+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T17:33:51.127218+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-23T17:33:51.127691+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-23T17:33:51.128456+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T17:33:51.141068+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-23T17:34:22.074289+05:30] request.INFO: Matched route "authentication_register". {"route":"authentication_register","route_parameters":{"_route":"authentication_register","_controller":"App\\Controller\\RegistrationController:register"},"request_uri":"http://localhost:8000/authentication/register","method":"GET"} []
[2024-04-23T17:34:22.075415+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-23T17:34:22.075474+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-23T17:34:22.075513+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-23T17:34:22.079159+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-23T17:34:22.079740+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T17:34:22.080028+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-23T17:34:22.080380+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T17:34:22.080520+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-23T17:34:22.080908+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T17:34:22.081007+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-23T17:34:22.081338+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T17:34:22.081419+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-23T17:34:22.081639+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-23T17:34:22.082498+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T17:34:22.082612+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-23T17:34:22.083107+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-23T17:34:22.084027+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T17:34:22.097001+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-23T17:34:22.156820+05:30] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:8000/favicon.ico" (from "http://localhost:8000/authentication/register")" at /home/kaliuser/test/api/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:8000/favicon.ico\" (from \"http://localhost:8000/authentication/register\") at /home/kaliuser/test/api/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/kaliuser/test/api/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2024-04-23T17:34:22.182943+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-23T17:34:22.183375+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T17:34:22.183539+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-23T17:34:22.183801+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T17:34:22.183869+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-23T17:34:22.184095+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T17:34:22.184170+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-23T17:34:22.184453+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T17:34:22.184525+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-23T17:34:22.184732+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-23T17:34:22.185553+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T17:34:22.185640+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-23T17:34:22.186089+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-23T17:34:22.186897+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T17:34:22.212685+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-23T21:35:03.071750+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-23T21:35:03.072602+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T21:35:03.073033+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-23T21:35:03.073348+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T21:35:03.073424+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-23T21:35:03.073695+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T21:35:03.073780+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-23T21:35:03.074110+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T21:35:03.074200+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-23T21:35:03.074453+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-23T21:35:03.075332+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T21:35:03.075482+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-23T21:35:03.076064+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-23T21:35:03.077022+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T21:35:03.089669+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-23T21:35:03.099458+05:30] request.INFO: Matched route "vaults". {"route":"vaults","route_parameters":{"_route":"vaults","_controller":"App\\Controller\\VaultController:list"},"request_uri":"http://localhost:8000/vaults","method":"GET"} []
[2024-04-23T21:35:03.101136+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-23T21:35:03.101221+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-23T21:35:03.101259+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-23T21:35:03.104182+05:30] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/kaliuser/test/api/vendor/symfony/security-http/Firewall/AccessListener.php:112)"} []
[2024-04-23T21:35:03.104484+05:30] security.DEBUG: Calling Authentication entry point. [] []
[2024-04-23T21:35:03.106643+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-23T21:35:03.107125+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T21:35:03.107327+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-23T21:35:03.107664+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T21:35:03.107750+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-23T21:35:03.108337+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T21:35:03.108664+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-23T21:35:03.109238+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T21:35:03.109478+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-23T21:35:03.109802+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-23T21:35:03.110923+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T21:35:03.111178+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-23T21:35:03.111967+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-23T21:35:03.113050+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T21:35:03.130630+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-23T21:55:42.585147+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-23T21:55:42.585939+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T21:55:42.586241+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-23T21:55:42.586588+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T21:55:42.586721+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-23T21:55:42.587044+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T21:55:42.587190+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-23T21:55:42.587535+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T21:55:42.587613+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-23T21:55:42.587851+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-23T21:55:42.588671+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T21:55:42.588801+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-23T21:55:42.589289+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-23T21:55:42.590144+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T21:55:42.597815+05:30] request.INFO: Matched route "authentication_register". {"route":"authentication_register","route_parameters":{"_route":"authentication_register","_controller":"App\\Controller\\RegistrationController:register"},"request_uri":"http://localhost:8000/authentication/register","method":"POST"} []
[2024-04-23T21:55:42.598794+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-23T21:55:42.598852+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-23T21:55:42.599062+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-23T21:55:42.601271+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-23T21:55:42.601579+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-23T21:55:42.601879+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T21:55:42.602049+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-23T21:55:42.602324+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T21:55:42.602396+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-23T21:55:42.602633+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T21:55:42.602716+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-23T21:55:42.603015+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T21:55:42.603090+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-23T21:55:42.603308+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-23T21:55:42.604144+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T21:55:42.604246+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-23T21:55:42.604698+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-23T21:55:42.605458+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T21:55:42.616814+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-23T21:55:53.664326+05:30] request.INFO: Matched route "authentication_register". {"route":"authentication_register","route_parameters":{"_route":"authentication_register","_controller":"App\\Controller\\RegistrationController:register"},"request_uri":"http://localhost:8000/authentication/register","method":"GET"} []
[2024-04-23T21:55:53.665428+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-23T21:55:53.665501+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-23T21:55:53.665539+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-23T21:55:53.669138+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-23T21:55:53.669623+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T21:55:53.669842+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-23T21:55:53.670224+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T21:55:53.670331+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-23T21:55:53.670758+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T21:55:53.670891+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-23T21:55:53.671453+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T21:55:53.671594+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-23T21:55:53.671998+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-23T21:55:53.673503+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T21:55:53.673758+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-23T21:55:53.674435+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-23T21:55:53.675478+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T21:55:53.688725+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-23T21:58:56.370395+05:30] request.INFO: Matched route "vaults". {"route":"vaults","route_parameters":{"_route":"vaults","_controller":"App\\Controller\\VaultController:list"},"request_uri":"http://localhost:8000/vaults","method":"GET"} []
[2024-04-23T21:58:56.371338+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-23T21:58:56.371390+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-23T21:58:56.371423+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-23T21:58:56.373513+05:30] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/kaliuser/test/api/vendor/symfony/security-http/Firewall/AccessListener.php:112)"} []
[2024-04-23T21:58:56.373601+05:30] security.DEBUG: Calling Authentication entry point. [] []
[2024-04-23T21:58:56.375259+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-23T21:58:56.375698+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T21:58:56.375951+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-23T21:58:56.376423+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T21:58:56.376640+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-23T21:58:56.377108+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T21:58:56.377352+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-23T21:58:56.378047+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T21:58:56.378193+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-23T21:58:56.378619+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-23T21:58:56.379863+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T21:58:56.380096+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-23T21:58:56.380801+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-23T21:58:56.381818+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T21:58:56.398105+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-23T21:59:36.009262+05:30] request.INFO: Matched route "vaults". {"route":"vaults","route_parameters":{"_route":"vaults","_controller":"App\\Controller\\VaultController:list"},"request_uri":"http://localhost:8000/vaults","method":"GET"} []
[2024-04-23T21:59:36.010319+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-23T21:59:36.010382+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-23T21:59:36.010420+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-23T21:59:36.012770+05:30] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/kaliuser/test/api/vendor/symfony/security-http/Firewall/AccessListener.php:112)"} []
[2024-04-23T21:59:36.012861+05:30] security.DEBUG: Calling Authentication entry point. [] []
[2024-04-23T21:59:36.014711+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-23T21:59:36.015254+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T21:59:36.015478+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-23T21:59:36.015823+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T21:59:36.015987+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-23T21:59:36.016455+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T21:59:36.016686+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-23T21:59:36.017232+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T21:59:36.017409+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-23T21:59:36.017810+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-23T21:59:36.019146+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T21:59:36.019333+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-23T21:59:36.019881+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-23T21:59:36.020809+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T21:59:36.037923+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-23T21:59:51.401295+05:30] request.INFO: Matched route "vaults". {"route":"vaults","route_parameters":{"_route":"vaults","_controller":"App\\Controller\\VaultController:list"},"request_uri":"http://localhost:8000/vaults","method":"GET"} []
[2024-04-23T21:59:51.403053+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-23T21:59:51.403145+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-23T21:59:51.403209+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-23T21:59:51.405829+05:30] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/kaliuser/test/api/vendor/symfony/security-http/Firewall/AccessListener.php:112)"} []
[2024-04-23T21:59:51.405922+05:30] security.DEBUG: Calling Authentication entry point. [] []
[2024-04-23T21:59:51.407637+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-23T21:59:51.408070+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T21:59:51.408271+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-23T21:59:51.408613+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T21:59:51.408699+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-23T21:59:51.409040+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T21:59:51.409149+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-23T21:59:51.409658+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T21:59:51.409758+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-23T21:59:51.410077+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-23T21:59:51.411299+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T21:59:51.411444+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-23T21:59:51.411989+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-23T21:59:51.412918+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T21:59:51.429383+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-23T22:02:42.169469+05:30] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:8000/vaults,1713888303,,200"" at /home/kaliuser/test/api/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:8000/vaults,1713888303,,200\" at /home/kaliuser/test/api/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/vaults,1713888303,,200/\". at /home/kaliuser/test/api/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2024-04-23T22:02:42.187558+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-23T22:02:42.188104+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T22:02:42.188363+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-23T22:02:42.188761+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T22:02:42.188851+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-23T22:02:42.189205+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T22:02:42.189336+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-23T22:02:42.189900+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T22:02:42.190050+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-23T22:02:42.190431+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-23T22:02:42.191648+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T22:02:42.191809+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-23T22:02:42.192488+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-23T22:02:42.193448+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T22:02:42.225790+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-23T22:03:10.822776+05:30] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:8000/authentication/register,1713889542,,415"" at /home/kaliuser/test/api/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:8000/authentication/register,1713889542,,415\" at /home/kaliuser/test/api/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/authentication/register,1713889542,,415/\". at /home/kaliuser/test/api/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2024-04-23T22:03:10.842156+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-23T22:03:10.842717+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T22:03:10.842988+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-23T22:03:10.843467+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T22:03:10.843586+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-23T22:03:10.844239+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T22:03:10.844471+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-23T22:03:10.844930+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T22:03:10.845077+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-23T22:03:10.845408+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-23T22:03:10.846374+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T22:03:10.846514+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-23T22:03:10.847372+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-23T22:03:10.849167+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-23T22:03:10.886491+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:31:33.182947+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:31:33.183518+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:31:33.183734+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:31:33.184051+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:31:33.184192+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:31:33.184595+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:31:33.184722+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:31:33.185104+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:31:33.185240+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:31:33.185603+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:31:33.186544+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:31:33.186692+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:31:33.187257+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:31:33.188117+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:31:33.198429+05:30] request.INFO: Matched route "authentication_register". {"route":"authentication_register","route_parameters":{"_route":"authentication_register","_controller":"App\\Controller\\RegistrationController:register"},"request_uri":"http://localhost:8000/authentication/register","method":"POST"} []
[2024-04-24T08:31:33.199221+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:31:33.199619+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T08:31:33.199683+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:31:33.199935+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:31:33.200295+05:30] php.INFO: User Deprecated: Since symfony/http-kernel 5.1: Referencing controllers with a single colon is deprecated. Use "App\Controller\RegistrationController::register" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/http-kernel 5.1: Referencing controllers with a single colon is deprecated. Use \"App\\Controller\\RegistrationController::register\" instead. at /home/kaliuser/test/api/vendor/symfony/http-kernel/Controller/ContainerControllerResolver.php:39)"} []
[2024-04-24T08:31:33.330489+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:31:33.331149+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.email = ? (parameters: array{"1":"thecodefreaker4@gmail.com"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.email = ?","params":{"1":"thecodefreaker4@gmail.com"},"types":{"1":2}} []
[2024-04-24T08:31:33.422080+05:30] doctrine.DEBUG: Beginning transaction [] []
[2024-04-24T08:31:33.423640+05:30] doctrine.DEBUG: Executing statement: INSERT INTO user (id, first_name, last_name, username, email, password, roles, registered_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�","2":"testuser","3":"test","4":"thecodefreaker4","5":"thecodefreaker4@gmail.com","6":"mQPcYGYZih/N73d3N1rqzSv5ResPxR/1kkPY1PhuZ7U=","7":"[\"ROLE_USER\"]","8":"2024-04-24 05:01:33"}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2}) {"sql":"INSERT INTO user (id, first_name, last_name, username, email, password, roles, registered_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�","2":"testuser","3":"test","4":"thecodefreaker4","5":"thecodefreaker4@gmail.com","6":"mQPcYGYZih/N73d3N1rqzSv5ResPxR/1kkPY1PhuZ7U=","7":"[\"ROLE_USER\"]","8":"2024-04-24 05:01:33"},"types":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2}} []
[2024-04-24T08:31:33.424022+05:30] doctrine.DEBUG: Committing transaction [] []
[2024-04-24T08:31:33.427747+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:31:33.427998+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:31:33.428353+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:31:33.428563+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:31:33.428922+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:31:33.429062+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:31:33.429449+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:31:33.429580+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:31:33.429808+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:31:33.430585+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:31:33.430671+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:31:33.431089+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:31:33.431974+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:31:33.451472+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:32:20.580788+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:32:20.581544+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:32:20.581844+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:32:20.582196+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:32:20.582291+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:32:20.582561+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:32:20.582646+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:32:20.582951+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:32:20.583027+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:32:20.583255+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:32:20.584097+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:32:20.584206+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:32:20.584729+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:32:20.585619+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:32:20.592913+05:30] request.INFO: Matched route "authentication_login". {"route":"authentication_login","route_parameters":{"_route":"authentication_login"},"request_uri":"http://localhost:8000/authentication/login","method":"POST"} []
[2024-04-24T08:32:20.594001+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T08:32:20.594065+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:32:20.597032+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:32:20.597651+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:32:20.598075+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"thecodefreaker4@gmail.com"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"thecodefreaker4@gmail.com"},"types":{"1":2}} []
[2024-04-24T08:32:20.684445+05:30] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"thecodefreaker4\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:32:20.684627+05:30] php.INFO: User Deprecated: Since symfony/security-bundle 5.3: Accessing the "security.token_storage" service directly from the container is deprecated, use dependency injection instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-bundle 5.3: Accessing the \"security.token_storage\" service directly from the container is deprecated, use dependency injection instead. at /home/kaliuser/test/api/var/cache/dev/ContainerGRY5Qzo/App_KernelDevDebugContainer.php:1965)"} []
[2024-04-24T08:32:20.686798+05:30] security.DEBUG: The "App\Security\Authenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:32:20.688297+05:30] security.DEBUG: Stored the security token in the session. {"key":"_security_authentication"} []
[2024-04-24T08:32:20.689197+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:32:20.689545+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:32:20.689907+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:32:20.689983+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:32:20.690225+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:32:20.690301+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:32:20.690610+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:32:20.690689+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:32:20.690907+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:32:20.691691+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:32:20.691777+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:32:20.692242+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:32:20.693185+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:32:20.712513+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:32:20.748557+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:32:20.749235+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:32:20.749474+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:32:20.749917+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:32:20.750006+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:32:20.750303+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:32:20.750392+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:32:20.750897+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:32:20.751080+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:32:20.751548+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:32:20.752861+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:32:20.753028+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:32:20.753591+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:32:20.754442+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:32:20.762656+05:30] request.INFO: Matched route "vaults". {"route":"vaults","route_parameters":{"_route":"vaults","_controller":"App\\Controller\\VaultController:list"},"request_uri":"http://localhost:8000/vaults","method":"GET"} []
[2024-04-24T08:32:20.763552+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T08:32:20.763610+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:32:20.763647+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:32:20.763990+05:30] security.DEBUG: Read existing security token from the session. {"key":"_security_authentication","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2024-04-24T08:32:20.765612+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:32:20.765854+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:32:20.766298+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ? (parameters: array{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ?","params":{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2}} []
[2024-04-24T08:32:20.768644+05:30] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"thecodefreaker4"} []
[2024-04-24T08:32:20.769127+05:30] php.INFO: User Deprecated: Since symfony/http-kernel 5.1: Referencing controllers with a single colon is deprecated. Use "App\Controller\VaultController::list" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/http-kernel 5.1: Referencing controllers with a single colon is deprecated. Use \"App\\Controller\\VaultController::list\" instead. at /home/kaliuser/test/api/vendor/symfony/http-kernel/Controller/ContainerControllerResolver.php:39)"} []
[2024-04-24T08:32:20.770336+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3 FROM vault t0 WHERE t0.user_id = ? (parameters: array{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3 FROM vault t0 WHERE t0.user_id = ?","params":{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2}} []
[2024-04-24T08:32:20.772081+05:30] security.DEBUG: Stored the security token in the session. {"key":"_security_authentication"} []
[2024-04-24T08:32:20.772899+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:32:20.773706+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:32:20.774040+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:32:20.774172+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:32:20.774442+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:32:20.774522+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:32:20.774803+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:32:20.774873+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:32:20.775144+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:32:20.775908+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:32:20.776008+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:32:20.776541+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:32:20.777346+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:32:20.791250+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:33:22.229289+05:30] request.INFO: Matched route "vaults_create". {"route":"vaults_create","route_parameters":{"_route":"vaults_create","_controller":"App\\Controller\\VaultController::create"},"request_uri":"http://localhost:8000/vaults","method":"POST"} []
[2024-04-24T08:33:22.230576+05:30] security.DEBUG: Read existing security token from the session. {"key":"_security_authentication","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2024-04-24T08:33:22.232394+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:33:22.233028+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ? (parameters: array{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ?","params":{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2}} []
[2024-04-24T08:33:22.234495+05:30] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"thecodefreaker4"} []
[2024-04-24T08:33:22.234561+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T08:33:22.234595+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:33:22.234818+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:33:22.235933+05:30] doctrine.DEBUG: Beginning transaction [] []
[2024-04-24T08:33:22.236172+05:30] doctrine.DEBUG: Executing statement: INSERT INTO vault (id, data, user_id) VALUES (?, ?, ?) (parameters: array{"1":"������N���BZT���","2":"fa8ea30ed238102b3aa1234892d690a85d438dce31566296270197f2564588d62d1d996722e694df4064e3bdbb98b740","3":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2,"2":2,"3":2}) {"sql":"INSERT INTO vault (id, data, user_id) VALUES (?, ?, ?)","params":{"1":"������N���BZT���","2":"fa8ea30ed238102b3aa1234892d690a85d438dce31566296270197f2564588d62d1d996722e694df4064e3bdbb98b740","3":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:33:22.236493+05:30] doctrine.DEBUG: Committing transaction [] []
[2024-04-24T08:33:22.238962+05:30] security.DEBUG: Stored the security token in the session. {"key":"_security_authentication"} []
[2024-04-24T08:33:22.239835+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:33:22.239969+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:33:22.240293+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:33:22.240516+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:33:22.240898+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:33:22.241003+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:33:22.241346+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:33:22.241466+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:33:22.241742+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:33:22.242516+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:33:22.242611+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:33:22.243034+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:33:22.243884+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:33:22.256280+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:33:35.733941+05:30] request.INFO: Matched route "vaults_create". {"route":"vaults_create","route_parameters":{"_route":"vaults_create","_controller":"App\\Controller\\VaultController::create"},"request_uri":"http://localhost:8000/vaults","method":"POST"} []
[2024-04-24T08:33:35.735161+05:30] security.DEBUG: Read existing security token from the session. {"key":"_security_authentication","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2024-04-24T08:33:35.736925+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:33:35.737548+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ? (parameters: array{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ?","params":{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2}} []
[2024-04-24T08:33:35.739028+05:30] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"thecodefreaker4"} []
[2024-04-24T08:33:35.739091+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T08:33:35.739125+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:33:35.739352+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:33:35.740476+05:30] doctrine.DEBUG: Beginning transaction [] []
[2024-04-24T08:33:35.740855+05:30] doctrine.DEBUG: Executing statement: INSERT INTO vault (id, data, user_id) VALUES (?, ?, ?) (parameters: array{"1":"!2c��(OZ�8�\r�-\n[","2":"fa8ea30ed238102b3aa1234892d690a8c653c6bd0a7bd22fca35a3a4bec35dae70f04a925a1d9c840f46f64be3325c6aa76119cc6f710e224d73143f22d25804","3":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2,"2":2,"3":2}) {"sql":"INSERT INTO vault (id, data, user_id) VALUES (?, ?, ?)","params":{"1":"!2c��(OZ�8�\r�-\n[","2":"fa8ea30ed238102b3aa1234892d690a8c653c6bd0a7bd22fca35a3a4bec35dae70f04a925a1d9c840f46f64be3325c6aa76119cc6f710e224d73143f22d25804","3":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:33:35.741203+05:30] doctrine.DEBUG: Committing transaction [] []
[2024-04-24T08:33:35.743598+05:30] security.DEBUG: Stored the security token in the session. {"key":"_security_authentication"} []
[2024-04-24T08:33:35.744514+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:33:35.744749+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:33:35.745119+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:33:35.745332+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:33:35.745740+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:33:35.745886+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:33:35.746270+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:33:35.746399+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:33:35.746627+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:33:35.747450+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:33:35.747530+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:33:35.747943+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:33:35.748737+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:33:35.761015+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:33:38.926099+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:33:38.926800+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:33:38.927060+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:33:38.927419+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:33:38.927380+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:33:38.927586+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:33:38.927728+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:33:38.927853+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:33:38.928017+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:33:38.928101+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:33:38.928139+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:33:38.928293+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:33:38.928438+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:33:38.928522+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:33:38.928855+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:33:38.928863+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:33:38.928959+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:33:38.929020+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:33:38.929222+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:33:38.929477+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:33:38.930170+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:33:38.930330+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:33:38.930653+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:33:38.930832+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:33:38.930828+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:33:38.931394+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:33:38.931745+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:33:38.932244+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:33:38.942767+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:33:38.942918+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:33:38.945839+05:30] request.INFO: Matched route "vaults_items". {"route":"vaults_items","route_parameters":{"_route":"vaults_items","_controller":"App\\Controller\\VaultController::listItems","id":"a3a98f82-b082-4ebb-acae-425a54e8cbef"},"request_uri":"http://localhost:8000/vaults/a3a98f82-b082-4ebb-acae-425a54e8cbef/items","method":"GET"} []
[2024-04-24T08:33:38.945835+05:30] request.INFO: Matched route "categories". {"route":"categories","route_parameters":{"_route":"categories","_controller":"App\\Controller\\CategoryController:list"},"request_uri":"http://localhost:8000/categories","method":"GET"} []
[2024-04-24T08:33:38.946618+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T08:33:38.946620+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T08:33:38.946671+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:33:38.946674+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:33:38.946710+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:33:38.946712+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:33:38.947068+05:30] security.DEBUG: Read existing security token from the session. {"key":"_security_authentication","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2024-04-24T08:33:38.948625+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:33:38.948992+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ? (parameters: array{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ?","params":{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2}} []
[2024-04-24T08:33:38.950385+05:30] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"thecodefreaker4"} []
[2024-04-24T08:33:38.964508+05:30] doctrine.DEBUG: Executing statement: SELECT l0_.id AS id_0, l0_.data AS data_1, n1_.id AS id_2, n1_.data AS data_3, l0_.user_id AS user_id_4, l0_.vault_id AS vault_id_5, l0_.category_id AS category_id_6, n1_.user_id AS user_id_7, n1_.vault_id AS vault_id_8, n1_.category_id AS category_id_9 FROM vault v2_ LEFT JOIN login l0_ ON (l0_.vault_id = v2_.id) LEFT JOIN note n1_ ON (n1_.vault_id = v2_.id) WHERE v2_.id = ? AND v2_.user_id = ? (parameters: array{"1":"������N���BZT���","2":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2,"2":2}) {"sql":"SELECT l0_.id AS id_0, l0_.data AS data_1, n1_.id AS id_2, n1_.data AS data_3, l0_.user_id AS user_id_4, l0_.vault_id AS vault_id_5, l0_.category_id AS category_id_6, n1_.user_id AS user_id_7, n1_.vault_id AS vault_id_8, n1_.category_id AS category_id_9 FROM vault v2_ LEFT JOIN login l0_ ON (l0_.vault_id = v2_.id) LEFT JOIN note n1_ ON (n1_.vault_id = v2_.id) WHERE v2_.id = ? AND v2_.user_id = ?","params":{"1":"������N���BZT���","2":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2,"2":2}} []
[2024-04-24T08:33:38.968968+05:30] security.DEBUG: Stored the security token in the session. {"key":"_security_authentication"} []
[2024-04-24T08:33:38.969809+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:33:38.970063+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:33:38.970350+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:33:38.970475+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:33:38.970734+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:33:38.970807+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:33:38.971077+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:33:38.971146+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:33:38.971340+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:33:38.972041+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:33:38.972136+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:33:38.972626+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:33:38.973389+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:33:38.974230+05:30] security.DEBUG: Read existing security token from the session. {"key":"_security_authentication","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2024-04-24T08:33:38.975815+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:33:38.976287+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ? (parameters: array{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ?","params":{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2}} []
[2024-04-24T08:33:38.978020+05:30] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"thecodefreaker4"} []
[2024-04-24T08:33:38.978551+05:30] php.INFO: User Deprecated: Since symfony/http-kernel 5.1: Referencing controllers with a single colon is deprecated. Use "App\Controller\CategoryController::list" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/http-kernel 5.1: Referencing controllers with a single colon is deprecated. Use \"App\\Controller\\CategoryController::list\" instead. at /home/kaliuser/test/api/vendor/symfony/http-kernel/Controller/ContainerControllerResolver.php:39)"} []
[2024-04-24T08:33:38.979526+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4 FROM category t0 WHERE t0.user_id = ? (parameters: array{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4 FROM category t0 WHERE t0.user_id = ?","params":{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2}} []
[2024-04-24T08:33:38.981327+05:30] security.DEBUG: Stored the security token in the session. {"key":"_security_authentication"} []
[2024-04-24T08:33:38.982167+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:33:38.982464+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:33:38.982869+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:33:38.983072+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:33:38.983585+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:33:38.983747+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:33:38.984306+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:33:38.984533+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:33:38.984995+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:33:38.985955+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:33:38.986275+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:33:38.986608+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:33:38.987478+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:33:38.988337+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:33:39.002411+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:34:23.696333+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:34:23.696805+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:34:23.697021+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:34:23.697324+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:34:23.697447+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:34:23.697711+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:34:23.697785+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:34:23.698063+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:34:23.698136+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:34:23.698338+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:34:23.699047+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:34:23.699127+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:34:23.699557+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:34:23.700246+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:34:23.706174+05:30] request.INFO: Matched route "logins_create". {"route":"logins_create","route_parameters":{"_route":"logins_create","_controller":"App\\Controller\\LoginController::create"},"request_uri":"http://localhost:8000/logins","method":"POST"} []
[2024-04-24T08:34:23.707251+05:30] security.DEBUG: Read existing security token from the session. {"key":"_security_authentication","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2024-04-24T08:34:23.708798+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:34:23.709424+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ? (parameters: array{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ?","params":{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2}} []
[2024-04-24T08:34:23.710654+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:34:23.710938+05:30] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"thecodefreaker4"} []
[2024-04-24T08:34:23.711006+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T08:34:23.711044+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:34:23.711277+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:34:23.712650+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3 FROM vault t0 WHERE t0.id = ? (parameters: array{"1":"������N���BZT���"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3 FROM vault t0 WHERE t0.id = ?","params":{"1":"������N���BZT���"},"types":{"1":2}} []
[2024-04-24T08:34:23.713329+05:30] doctrine.DEBUG: Beginning transaction [] []
[2024-04-24T08:34:23.713729+05:30] doctrine.DEBUG: Executing statement: INSERT INTO login (id, data, user_id, vault_id, category_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"fgz�Q+L�Ȥ\r\f��d","2":"9fec0df8f6e6361ec64df5dbb8a32c13a15cbc9051ca0823ca0f0101a0bd7ef1471f9e25c6453708dd6cf9a12b6dfaea1a7b49248b6e256ef9efeb25b3647c7a03ec8b4e0628ecb505c7ac1c74238fec25b8bb0b2c434db06a846f6bf5c0988e678bbd51c3069c2270bed2b38b19d539068f47ab463a790099399c12c1992653a6156bca12556e0ab5bb6757e02ca9c2335b586ed6b9268f97a29b47bf25b9f39d6fe7b1b4adb2b43520dcc923770789aa17f92971d025ad7cbd263930ff56423b327b430986bab99580bbc83cbc2b05f0b2c7817ca6cee9836f1ac571f5d485e044c78e448ad37e3d94549594e140d9","3":"�e\u0001\"!�Fƞ�\u0018P³\u0002�","4":"������N���BZT���","5":null}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2}) {"sql":"INSERT INTO login (id, data, user_id, vault_id, category_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"fgz�Q+L�Ȥ\r\f��d","2":"9fec0df8f6e6361ec64df5dbb8a32c13a15cbc9051ca0823ca0f0101a0bd7ef1471f9e25c6453708dd6cf9a12b6dfaea1a7b49248b6e256ef9efeb25b3647c7a03ec8b4e0628ecb505c7ac1c74238fec25b8bb0b2c434db06a846f6bf5c0988e678bbd51c3069c2270bed2b38b19d539068f47ab463a790099399c12c1992653a6156bca12556e0ab5bb6757e02ca9c2335b586ed6b9268f97a29b47bf25b9f39d6fe7b1b4adb2b43520dcc923770789aa17f92971d025ad7cbd263930ff56423b327b430986bab99580bbc83cbc2b05f0b2c7817ca6cee9836f1ac571f5d485e044c78e448ad37e3d94549594e140d9","3":"�e\u0001\"!�Fƞ�\u0018P³\u0002�","4":"������N���BZT���","5":null},"types":{"1":2,"2":2,"3":2,"4":2,"5":2}} []
[2024-04-24T08:34:23.714622+05:30] doctrine.DEBUG: Committing transaction [] []
[2024-04-24T08:34:23.716778+05:30] security.DEBUG: Stored the security token in the session. {"key":"_security_authentication"} []
[2024-04-24T08:34:23.717613+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:34:23.717926+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:34:23.718279+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:34:23.718403+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:34:23.718741+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:34:23.718867+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:34:23.719336+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:34:23.719427+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:34:23.719702+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:34:23.720888+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:34:23.721207+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:34:23.721767+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:34:23.722599+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:34:23.735989+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:34:47.634223+05:30] request.INFO: Matched route "vaults". {"route":"vaults","route_parameters":{"_route":"vaults","_controller":"App\\Controller\\VaultController:list"},"request_uri":"http://localhost:8000/vaults","method":"GET"} []
[2024-04-24T08:34:47.635952+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T08:34:47.636045+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:34:47.636105+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:34:47.636610+05:30] security.DEBUG: Read existing security token from the session. {"key":"_security_authentication","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2024-04-24T08:34:47.638461+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:34:47.638960+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ? (parameters: array{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ?","params":{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2}} []
[2024-04-24T08:34:47.640470+05:30] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"thecodefreaker4"} []
[2024-04-24T08:34:47.640971+05:30] php.INFO: User Deprecated: Since symfony/http-kernel 5.1: Referencing controllers with a single colon is deprecated. Use "App\Controller\VaultController::list" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/http-kernel 5.1: Referencing controllers with a single colon is deprecated. Use \"App\\Controller\\VaultController::list\" instead. at /home/kaliuser/test/api/vendor/symfony/http-kernel/Controller/ContainerControllerResolver.php:39)"} []
[2024-04-24T08:34:47.641672+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3 FROM vault t0 WHERE t0.user_id = ? (parameters: array{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3 FROM vault t0 WHERE t0.user_id = ?","params":{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2}} []
[2024-04-24T08:34:47.642147+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM login t0 WHERE t0.vault_id = ? (parameters: array{"1":"!2c��(OZ�8�\r�-\n["}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM login t0 WHERE t0.vault_id = ?","params":{"1":"!2c��(OZ�8�\r�-\n["},"types":{"1":2}} []
[2024-04-24T08:34:47.642405+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM note t0 WHERE t0.vault_id = ? (parameters: array{"1":"!2c��(OZ�8�\r�-\n["}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM note t0 WHERE t0.vault_id = ?","params":{"1":"!2c��(OZ�8�\r�-\n["},"types":{"1":2}} []
[2024-04-24T08:34:47.642572+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM login t0 WHERE t0.vault_id = ? (parameters: array{"1":"������N���BZT���"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM login t0 WHERE t0.vault_id = ?","params":{"1":"������N���BZT���"},"types":{"1":2}} []
[2024-04-24T08:34:47.642814+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM note t0 WHERE t0.vault_id = ? (parameters: array{"1":"������N���BZT���"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM note t0 WHERE t0.vault_id = ?","params":{"1":"������N���BZT���"},"types":{"1":2}} []
[2024-04-24T08:34:47.644302+05:30] security.DEBUG: Stored the security token in the session. {"key":"_security_authentication"} []
[2024-04-24T08:34:47.645184+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:34:47.645333+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:34:47.645554+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:34:47.645620+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:34:47.645857+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:34:47.645935+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:34:47.646215+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:34:47.646288+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:34:47.646489+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:34:47.647222+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:34:47.647302+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:34:47.647718+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:34:47.648528+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:34:47.663323+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:34:50.110113+05:30] request.INFO: Matched route "categories". {"route":"categories","route_parameters":{"_route":"categories","_controller":"App\\Controller\\CategoryController:list"},"request_uri":"http://localhost:8000/categories","method":"GET"} []
[2024-04-24T08:34:50.111459+05:30] request.INFO: Matched route "vaults_items". {"route":"vaults_items","route_parameters":{"_route":"vaults_items","_controller":"App\\Controller\\VaultController::listItems","id":"a3a98f82-b082-4ebb-acae-425a54e8cbef"},"request_uri":"http://localhost:8000/vaults/a3a98f82-b082-4ebb-acae-425a54e8cbef/items","method":"GET"} []
[2024-04-24T08:34:50.111649+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T08:34:50.111728+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:34:50.111779+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:34:50.112728+05:30] security.DEBUG: Read existing security token from the session. {"key":"_security_authentication","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2024-04-24T08:34:50.113367+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T08:34:50.113449+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:34:50.113512+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:34:50.114846+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:34:50.115300+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ? (parameters: array{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ?","params":{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2}} []
[2024-04-24T08:34:50.116895+05:30] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"thecodefreaker4"} []
[2024-04-24T08:34:50.117447+05:30] php.INFO: User Deprecated: Since symfony/http-kernel 5.1: Referencing controllers with a single colon is deprecated. Use "App\Controller\CategoryController::list" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/http-kernel 5.1: Referencing controllers with a single colon is deprecated. Use \"App\\Controller\\CategoryController::list\" instead. at /home/kaliuser/test/api/vendor/symfony/http-kernel/Controller/ContainerControllerResolver.php:39)"} []
[2024-04-24T08:34:50.118252+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4 FROM category t0 WHERE t0.user_id = ? (parameters: array{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4 FROM category t0 WHERE t0.user_id = ?","params":{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2}} []
[2024-04-24T08:34:50.121410+05:30] security.DEBUG: Stored the security token in the session. {"key":"_security_authentication"} []
[2024-04-24T08:34:50.122861+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:34:50.123129+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:34:50.123495+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:34:50.123572+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:34:50.123851+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:34:50.123970+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:34:50.124408+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:34:50.124632+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:34:50.125107+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:34:50.126088+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:34:50.126244+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:34:50.126747+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:34:50.127668+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:34:50.128618+05:30] security.DEBUG: Read existing security token from the session. {"key":"_security_authentication","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2024-04-24T08:34:50.131361+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:34:50.131883+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ? (parameters: array{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ?","params":{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2}} []
[2024-04-24T08:34:50.134160+05:30] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"thecodefreaker4"} []
[2024-04-24T08:34:50.137053+05:30] doctrine.DEBUG: Executing statement: SELECT l0_.id AS id_0, l0_.data AS data_1, n1_.id AS id_2, n1_.data AS data_3, l0_.user_id AS user_id_4, l0_.vault_id AS vault_id_5, l0_.category_id AS category_id_6, n1_.user_id AS user_id_7, n1_.vault_id AS vault_id_8, n1_.category_id AS category_id_9 FROM vault v2_ LEFT JOIN login l0_ ON (l0_.vault_id = v2_.id) LEFT JOIN note n1_ ON (n1_.vault_id = v2_.id) WHERE v2_.id = ? AND v2_.user_id = ? (parameters: array{"1":"������N���BZT���","2":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2,"2":2}) {"sql":"SELECT l0_.id AS id_0, l0_.data AS data_1, n1_.id AS id_2, n1_.data AS data_3, l0_.user_id AS user_id_4, l0_.vault_id AS vault_id_5, l0_.category_id AS category_id_6, n1_.user_id AS user_id_7, n1_.vault_id AS vault_id_8, n1_.category_id AS category_id_9 FROM vault v2_ LEFT JOIN login l0_ ON (l0_.vault_id = v2_.id) LEFT JOIN note n1_ ON (n1_.vault_id = v2_.id) WHERE v2_.id = ? AND v2_.user_id = ?","params":{"1":"������N���BZT���","2":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2,"2":2}} []
[2024-04-24T08:34:50.140387+05:30] security.DEBUG: Stored the security token in the session. {"key":"_security_authentication"} []
[2024-04-24T08:34:50.141318+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:34:50.141554+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:34:50.141908+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:34:50.141997+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:34:50.142306+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:34:50.142403+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:34:50.142960+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:34:50.143092+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:34:50.143388+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:34:50.143445+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:34:50.144711+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:34:50.144927+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:34:50.145495+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:34:50.146563+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:34:50.160540+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:34:59.773974+05:30] request.INFO: Matched route "vaults". {"route":"vaults","route_parameters":{"_route":"vaults","_controller":"App\\Controller\\VaultController:list"},"request_uri":"http://localhost:8000/vaults","method":"GET"} []
[2024-04-24T08:34:59.775200+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T08:34:59.775314+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:34:59.775356+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:34:59.776153+05:30] security.DEBUG: Read existing security token from the session. {"key":"_security_authentication","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2024-04-24T08:34:59.778191+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:34:59.778744+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ? (parameters: array{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ?","params":{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2}} []
[2024-04-24T08:34:59.781133+05:30] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"thecodefreaker4"} []
[2024-04-24T08:34:59.781708+05:30] php.INFO: User Deprecated: Since symfony/http-kernel 5.1: Referencing controllers with a single colon is deprecated. Use "App\Controller\VaultController::list" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/http-kernel 5.1: Referencing controllers with a single colon is deprecated. Use \"App\\Controller\\VaultController::list\" instead. at /home/kaliuser/test/api/vendor/symfony/http-kernel/Controller/ContainerControllerResolver.php:39)"} []
[2024-04-24T08:34:59.782438+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3 FROM vault t0 WHERE t0.user_id = ? (parameters: array{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3 FROM vault t0 WHERE t0.user_id = ?","params":{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2}} []
[2024-04-24T08:34:59.783116+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM login t0 WHERE t0.vault_id = ? (parameters: array{"1":"!2c��(OZ�8�\r�-\n["}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM login t0 WHERE t0.vault_id = ?","params":{"1":"!2c��(OZ�8�\r�-\n["},"types":{"1":2}} []
[2024-04-24T08:34:59.783655+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM note t0 WHERE t0.vault_id = ? (parameters: array{"1":"!2c��(OZ�8�\r�-\n["}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM note t0 WHERE t0.vault_id = ?","params":{"1":"!2c��(OZ�8�\r�-\n["},"types":{"1":2}} []
[2024-04-24T08:34:59.783999+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM login t0 WHERE t0.vault_id = ? (parameters: array{"1":"������N���BZT���"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM login t0 WHERE t0.vault_id = ?","params":{"1":"������N���BZT���"},"types":{"1":2}} []
[2024-04-24T08:34:59.784442+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM note t0 WHERE t0.vault_id = ? (parameters: array{"1":"������N���BZT���"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM note t0 WHERE t0.vault_id = ?","params":{"1":"������N���BZT���"},"types":{"1":2}} []
[2024-04-24T08:34:59.786446+05:30] security.DEBUG: Stored the security token in the session. {"key":"_security_authentication"} []
[2024-04-24T08:34:59.787428+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:34:59.787678+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:34:59.787974+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:34:59.788057+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:34:59.788448+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:34:59.788564+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:34:59.789072+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:34:59.789164+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:34:59.789457+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:34:59.790552+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:34:59.790677+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:34:59.791174+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:34:59.792060+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:34:59.806817+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:35:02.093033+05:30] request.INFO: Matched route "authentication_logout". {"route":"authentication_logout","route_parameters":{"_route":"authentication_logout"},"request_uri":"http://localhost:8000/authentication/logout","method":"GET"} []
[2024-04-24T08:35:02.094241+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T08:35:02.094318+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:35:02.094357+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:35:02.094813+05:30] security.DEBUG: Read existing security token from the session. {"key":"_security_authentication","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2024-04-24T08:35:02.096920+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:35:02.097452+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ? (parameters: array{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ?","params":{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2}} []
[2024-04-24T08:35:02.099027+05:30] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"thecodefreaker4"} []
[2024-04-24T08:35:02.099920+05:30] php.INFO: User Deprecated: Since symfony/security-http 5.1: The "Symfony\Component\Security\Http\Logout\LogoutSuccessHandlerInterface" interface is deprecated, create a listener for the "Symfony\Component\Security\Http\Event\LogoutEvent" event instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-http 5.1: The \"Symfony\\Component\\Security\\Http\\Logout\\LogoutSuccessHandlerInterface\" interface is deprecated, create a listener for the \"Symfony\\Component\\Security\\Http\\Event\\LogoutEvent\" event instead. at /home/kaliuser/test/api/vendor/symfony/security-http/Logout/LogoutSuccessHandlerInterface.php:18)"} []
[2024-04-24T08:35:02.103132+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:35:02.103428+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:35:02.103782+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:35:02.103857+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:35:02.104159+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:35:02.104261+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:35:02.104638+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:35:02.104844+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:35:02.105174+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:35:02.106211+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:35:02.106388+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:35:02.106885+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:35:02.107837+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:35:02.126225+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:36:01.280987+05:30] request.INFO: Matched route "authentication_login". {"route":"authentication_login","route_parameters":{"_route":"authentication_login"},"request_uri":"http://localhost:8000/authentication/login","method":"POST"} []
[2024-04-24T08:36:01.282348+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T08:36:01.282412+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:36:01.285114+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:36:01.285746+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"thecodefreaker4@gmail.com"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"thecodefreaker4@gmail.com"},"types":{"1":2}} []
[2024-04-24T08:36:01.373736+05:30] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"thecodefreaker4\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:36:01.373935+05:30] php.INFO: User Deprecated: Since symfony/security-bundle 5.3: Accessing the "security.token_storage" service directly from the container is deprecated, use dependency injection instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-bundle 5.3: Accessing the \"security.token_storage\" service directly from the container is deprecated, use dependency injection instead. at /home/kaliuser/test/api/var/cache/dev/ContainerGRY5Qzo/App_KernelDevDebugContainer.php:1965)"} []
[2024-04-24T08:36:01.375259+05:30] security.DEBUG: The "App\Security\Authenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:36:01.377121+05:30] security.DEBUG: Stored the security token in the session. {"key":"_security_authentication"} []
[2024-04-24T08:36:01.378217+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:36:01.378579+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:36:01.379167+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:36:01.379355+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:36:01.379825+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:36:01.379985+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:36:01.380475+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:36:01.380657+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:36:01.380975+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:36:01.382024+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:36:01.382301+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:36:01.383205+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:36:01.384341+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:36:01.404453+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:36:01.414252+05:30] request.INFO: Matched route "vaults". {"route":"vaults","route_parameters":{"_route":"vaults","_controller":"App\\Controller\\VaultController:list"},"request_uri":"http://localhost:8000/vaults","method":"GET"} []
[2024-04-24T08:36:01.415136+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T08:36:01.415201+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:36:01.415240+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:36:01.415597+05:30] security.DEBUG: Read existing security token from the session. {"key":"_security_authentication","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2024-04-24T08:36:01.417471+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:36:01.418017+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ? (parameters: array{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ?","params":{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2}} []
[2024-04-24T08:36:01.419583+05:30] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"thecodefreaker4"} []
[2024-04-24T08:36:01.420221+05:30] php.INFO: User Deprecated: Since symfony/http-kernel 5.1: Referencing controllers with a single colon is deprecated. Use "App\Controller\VaultController::list" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/http-kernel 5.1: Referencing controllers with a single colon is deprecated. Use \"App\\Controller\\VaultController::list\" instead. at /home/kaliuser/test/api/vendor/symfony/http-kernel/Controller/ContainerControllerResolver.php:39)"} []
[2024-04-24T08:36:01.421034+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3 FROM vault t0 WHERE t0.user_id = ? (parameters: array{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3 FROM vault t0 WHERE t0.user_id = ?","params":{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2}} []
[2024-04-24T08:36:01.421686+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM login t0 WHERE t0.vault_id = ? (parameters: array{"1":"!2c��(OZ�8�\r�-\n["}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM login t0 WHERE t0.vault_id = ?","params":{"1":"!2c��(OZ�8�\r�-\n["},"types":{"1":2}} []
[2024-04-24T08:36:01.422028+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM note t0 WHERE t0.vault_id = ? (parameters: array{"1":"!2c��(OZ�8�\r�-\n["}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM note t0 WHERE t0.vault_id = ?","params":{"1":"!2c��(OZ�8�\r�-\n["},"types":{"1":2}} []
[2024-04-24T08:36:01.423410+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM login t0 WHERE t0.vault_id = ? (parameters: array{"1":"������N���BZT���"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM login t0 WHERE t0.vault_id = ?","params":{"1":"������N���BZT���"},"types":{"1":2}} []
[2024-04-24T08:36:01.423876+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM note t0 WHERE t0.vault_id = ? (parameters: array{"1":"������N���BZT���"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM note t0 WHERE t0.vault_id = ?","params":{"1":"������N���BZT���"},"types":{"1":2}} []
[2024-04-24T08:36:01.425801+05:30] security.DEBUG: Stored the security token in the session. {"key":"_security_authentication"} []
[2024-04-24T08:36:01.427016+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:36:01.427332+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:36:01.427770+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:36:01.427860+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:36:01.428241+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:36:01.428422+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:36:01.429088+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:36:01.429344+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:36:01.429885+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:36:01.431125+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:36:01.431255+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:36:01.431820+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:36:01.432849+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:36:01.458480+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:36:09.121353+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:36:09.121978+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:36:09.122209+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:36:09.122530+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:36:09.122717+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:36:09.123057+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:36:09.123146+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:36:09.123446+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:36:09.123525+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:36:09.123735+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:36:09.124468+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:36:09.124556+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:36:09.125084+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:36:09.125870+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:36:09.132024+05:30] request.INFO: Matched route "vaults_update". {"route":"vaults_update","route_parameters":{"_route":"vaults_update","_controller":"App\\Controller\\VaultController::update","id":"213263a3-d428-4f5a-b838-ba0dfa2d0a5b"},"request_uri":"http://localhost:8000/vaults/213263a3-d428-4f5a-b838-ba0dfa2d0a5b","method":"PUT"} []
[2024-04-24T08:36:09.133109+05:30] security.DEBUG: Read existing security token from the session. {"key":"_security_authentication","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2024-04-24T08:36:09.134658+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:36:09.135182+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ? (parameters: array{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ?","params":{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2}} []
[2024-04-24T08:36:09.136557+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:36:09.136762+05:30] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"thecodefreaker4"} []
[2024-04-24T08:36:09.136833+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T08:36:09.136870+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:36:09.136904+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:36:09.138026+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3 FROM vault t0 WHERE t0.id = ? AND t0.user_id = ? LIMIT 1 (parameters: array{"1":"!2c��(OZ�8�\r�-\n[","2":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2,"2":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3 FROM vault t0 WHERE t0.id = ? AND t0.user_id = ? LIMIT 1","params":{"1":"!2c��(OZ�8�\r�-\n[","2":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2,"2":2}} []
[2024-04-24T08:36:09.140237+05:30] security.DEBUG: Stored the security token in the session. {"key":"_security_authentication"} []
[2024-04-24T08:36:09.140999+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:36:09.141308+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:36:09.141675+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:36:09.141887+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:36:09.142308+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:36:09.142491+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:36:09.143841+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:36:09.143955+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:36:09.144262+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:36:09.145166+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:36:09.145475+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:36:09.146041+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:36:09.146923+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:36:09.159715+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:36:11.505317+05:30] request.INFO: Matched route "vaults_items". {"route":"vaults_items","route_parameters":{"_route":"vaults_items","_controller":"App\\Controller\\VaultController::listItems","id":"a3a98f82-b082-4ebb-acae-425a54e8cbef"},"request_uri":"http://localhost:8000/vaults/a3a98f82-b082-4ebb-acae-425a54e8cbef/items","method":"GET"} []
[2024-04-24T08:36:11.505585+05:30] request.INFO: Matched route "categories". {"route":"categories","route_parameters":{"_route":"categories","_controller":"App\\Controller\\CategoryController:list"},"request_uri":"http://localhost:8000/categories","method":"GET"} []
[2024-04-24T08:36:11.506234+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T08:36:11.506303+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:36:11.506342+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:36:11.506456+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T08:36:11.506534+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:36:11.506594+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:36:11.506716+05:30] security.DEBUG: Read existing security token from the session. {"key":"_security_authentication","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2024-04-24T08:36:11.508447+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:36:11.509081+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ? (parameters: array{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ?","params":{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2}} []
[2024-04-24T08:36:11.511682+05:30] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"thecodefreaker4"} []
[2024-04-24T08:36:11.513801+05:30] doctrine.DEBUG: Executing statement: SELECT l0_.id AS id_0, l0_.data AS data_1, n1_.id AS id_2, n1_.data AS data_3, l0_.user_id AS user_id_4, l0_.vault_id AS vault_id_5, l0_.category_id AS category_id_6, n1_.user_id AS user_id_7, n1_.vault_id AS vault_id_8, n1_.category_id AS category_id_9 FROM vault v2_ LEFT JOIN login l0_ ON (l0_.vault_id = v2_.id) LEFT JOIN note n1_ ON (n1_.vault_id = v2_.id) WHERE v2_.id = ? AND v2_.user_id = ? (parameters: array{"1":"������N���BZT���","2":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2,"2":2}) {"sql":"SELECT l0_.id AS id_0, l0_.data AS data_1, n1_.id AS id_2, n1_.data AS data_3, l0_.user_id AS user_id_4, l0_.vault_id AS vault_id_5, l0_.category_id AS category_id_6, n1_.user_id AS user_id_7, n1_.vault_id AS vault_id_8, n1_.category_id AS category_id_9 FROM vault v2_ LEFT JOIN login l0_ ON (l0_.vault_id = v2_.id) LEFT JOIN note n1_ ON (n1_.vault_id = v2_.id) WHERE v2_.id = ? AND v2_.user_id = ?","params":{"1":"������N���BZT���","2":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2,"2":2}} []
[2024-04-24T08:36:11.516823+05:30] security.DEBUG: Stored the security token in the session. {"key":"_security_authentication"} []
[2024-04-24T08:36:11.517792+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:36:11.518170+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:36:11.518530+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:36:11.518622+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:36:11.518924+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:36:11.519026+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:36:11.519505+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:36:11.519595+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:36:11.519882+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:36:11.520864+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:36:11.521033+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:36:11.521504+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:36:11.522357+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:36:11.523151+05:30] security.DEBUG: Read existing security token from the session. {"key":"_security_authentication","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2024-04-24T08:36:11.524852+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:36:11.525466+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ? (parameters: array{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ?","params":{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2}} []
[2024-04-24T08:36:11.527951+05:30] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"thecodefreaker4"} []
[2024-04-24T08:36:11.528807+05:30] php.INFO: User Deprecated: Since symfony/http-kernel 5.1: Referencing controllers with a single colon is deprecated. Use "App\Controller\CategoryController::list" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/http-kernel 5.1: Referencing controllers with a single colon is deprecated. Use \"App\\Controller\\CategoryController::list\" instead. at /home/kaliuser/test/api/vendor/symfony/http-kernel/Controller/ContainerControllerResolver.php:39)"} []
[2024-04-24T08:36:11.530026+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4 FROM category t0 WHERE t0.user_id = ? (parameters: array{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4 FROM category t0 WHERE t0.user_id = ?","params":{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2}} []
[2024-04-24T08:36:11.532580+05:30] security.DEBUG: Stored the security token in the session. {"key":"_security_authentication"} []
[2024-04-24T08:36:11.533918+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:36:11.534215+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:36:11.534513+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:36:11.534590+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:36:11.534852+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:36:11.534937+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:36:11.535257+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:36:11.535335+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:36:11.535421+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:36:11.535559+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:36:11.536361+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:36:11.536475+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:36:11.536978+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:36:11.537911+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:36:11.551880+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:36:39.314070+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:36:39.314784+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:36:39.314973+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:36:39.315275+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:36:39.315356+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:36:39.315657+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:36:39.315750+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:36:39.316332+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:36:39.316649+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:36:39.317189+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:36:39.318496+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:36:39.318626+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:36:39.319125+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:36:39.320011+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:36:39.326652+05:30] request.INFO: Matched route "notes_create". {"route":"notes_create","route_parameters":{"_route":"notes_create","_controller":"App\\Controller\\NoteController::create"},"request_uri":"http://localhost:8000/notes","method":"POST"} []
[2024-04-24T08:36:39.327737+05:30] security.DEBUG: Read existing security token from the session. {"key":"_security_authentication","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2024-04-24T08:36:39.329286+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:36:39.329766+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ? (parameters: array{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ?","params":{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2}} []
[2024-04-24T08:36:39.330967+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:36:39.331210+05:30] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"thecodefreaker4"} []
[2024-04-24T08:36:39.331275+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T08:36:39.331310+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:36:39.331529+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:36:39.332887+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3 FROM vault t0 WHERE t0.id = ? (parameters: array{"1":"������N���BZT���"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3 FROM vault t0 WHERE t0.id = ?","params":{"1":"������N���BZT���"},"types":{"1":2}} []
[2024-04-24T08:36:39.333424+05:30] doctrine.DEBUG: Beginning transaction [] []
[2024-04-24T08:36:39.333715+05:30] doctrine.DEBUG: Executing statement: INSERT INTO note (id, data, user_id, vault_id, category_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"\u001f�^�\u0016�Ev�]ߋ๓�","2":"9fec0df8f6e6361ec64df5dbb8a32c1361bfd5e2ab55c7630b49f6cdbae42a2f1f1d567a57eb7d36f9db13443c990d638ab853fe187e12620a073560f966d75a46b60dddc87517c896cd0c5b3f938264294dafd29f1dfaf8e899f367f661bb43","3":"�e\u0001\"!�Fƞ�\u0018P³\u0002�","4":"������N���BZT���","5":null}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2}) {"sql":"INSERT INTO note (id, data, user_id, vault_id, category_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"\u001f�^�\u0016�Ev�]ߋ๓�","2":"9fec0df8f6e6361ec64df5dbb8a32c1361bfd5e2ab55c7630b49f6cdbae42a2f1f1d567a57eb7d36f9db13443c990d638ab853fe187e12620a073560f966d75a46b60dddc87517c896cd0c5b3f938264294dafd29f1dfaf8e899f367f661bb43","3":"�e\u0001\"!�Fƞ�\u0018P³\u0002�","4":"������N���BZT���","5":null},"types":{"1":2,"2":2,"3":2,"4":2,"5":2}} []
[2024-04-24T08:36:39.333966+05:30] doctrine.DEBUG: Committing transaction [] []
[2024-04-24T08:36:39.336056+05:30] security.DEBUG: Stored the security token in the session. {"key":"_security_authentication"} []
[2024-04-24T08:36:39.336940+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:36:39.337162+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:36:39.337446+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:36:39.337567+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:36:39.337865+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:36:39.337940+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:36:39.338213+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:36:39.338286+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:36:39.338485+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:36:39.339172+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:36:39.339255+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:36:39.339667+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:36:39.340425+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:36:39.353236+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:37:20.310996+05:30] request.INFO: Matched route "vaults". {"route":"vaults","route_parameters":{"_route":"vaults","_controller":"App\\Controller\\VaultController:list"},"request_uri":"http://localhost:8000/vaults","method":"GET"} []
[2024-04-24T08:37:20.312954+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T08:37:20.313055+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:37:20.313122+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:37:20.313942+05:30] security.DEBUG: Read existing security token from the session. {"key":"_security_authentication","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2024-04-24T08:37:20.317391+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:37:20.318136+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ? (parameters: array{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ?","params":{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2}} []
[2024-04-24T08:37:20.320184+05:30] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"thecodefreaker4"} []
[2024-04-24T08:37:20.320811+05:30] php.INFO: User Deprecated: Since symfony/http-kernel 5.1: Referencing controllers with a single colon is deprecated. Use "App\Controller\VaultController::list" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/http-kernel 5.1: Referencing controllers with a single colon is deprecated. Use \"App\\Controller\\VaultController::list\" instead. at /home/kaliuser/test/api/vendor/symfony/http-kernel/Controller/ContainerControllerResolver.php:39)"} []
[2024-04-24T08:37:20.321653+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3 FROM vault t0 WHERE t0.user_id = ? (parameters: array{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3 FROM vault t0 WHERE t0.user_id = ?","params":{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2}} []
[2024-04-24T08:37:20.322566+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM login t0 WHERE t0.vault_id = ? (parameters: array{"1":"!2c��(OZ�8�\r�-\n["}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM login t0 WHERE t0.vault_id = ?","params":{"1":"!2c��(OZ�8�\r�-\n["},"types":{"1":2}} []
[2024-04-24T08:37:20.323139+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM note t0 WHERE t0.vault_id = ? (parameters: array{"1":"!2c��(OZ�8�\r�-\n["}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM note t0 WHERE t0.vault_id = ?","params":{"1":"!2c��(OZ�8�\r�-\n["},"types":{"1":2}} []
[2024-04-24T08:37:20.323510+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM login t0 WHERE t0.vault_id = ? (parameters: array{"1":"������N���BZT���"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM login t0 WHERE t0.vault_id = ?","params":{"1":"������N���BZT���"},"types":{"1":2}} []
[2024-04-24T08:37:20.323958+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM note t0 WHERE t0.vault_id = ? (parameters: array{"1":"������N���BZT���"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM note t0 WHERE t0.vault_id = ?","params":{"1":"������N���BZT���"},"types":{"1":2}} []
[2024-04-24T08:37:20.326018+05:30] security.DEBUG: Stored the security token in the session. {"key":"_security_authentication"} []
[2024-04-24T08:37:20.327081+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:37:20.327291+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:37:20.327599+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:37:20.327678+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:37:20.327959+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:37:20.328044+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:37:20.328384+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:37:20.328472+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:37:20.328709+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:37:20.329537+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:37:20.329655+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:37:20.330113+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:37:20.330967+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:37:20.346816+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:37:47.523840+05:30] request.INFO: Matched route "categories". {"route":"categories","route_parameters":{"_route":"categories","_controller":"App\\Controller\\CategoryController:list"},"request_uri":"http://localhost:8000/categories","method":"GET"} []
[2024-04-24T08:37:47.523843+05:30] request.INFO: Matched route "vaults_items". {"route":"vaults_items","route_parameters":{"_route":"vaults_items","_controller":"App\\Controller\\VaultController::listItems","id":"a3a98f82-b082-4ebb-acae-425a54e8cbef"},"request_uri":"http://localhost:8000/vaults/a3a98f82-b082-4ebb-acae-425a54e8cbef/items","method":"GET"} []
[2024-04-24T08:37:47.524866+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T08:37:47.524866+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T08:37:47.524922+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:37:47.524924+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:37:47.524960+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:37:47.524963+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:37:47.525424+05:30] security.DEBUG: Read existing security token from the session. {"key":"_security_authentication","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2024-04-24T08:37:47.527471+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:37:47.528034+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ? (parameters: array{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ?","params":{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2}} []
[2024-04-24T08:37:47.529573+05:30] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"thecodefreaker4"} []
[2024-04-24T08:37:47.531776+05:30] doctrine.DEBUG: Executing statement: SELECT l0_.id AS id_0, l0_.data AS data_1, n1_.id AS id_2, n1_.data AS data_3, l0_.user_id AS user_id_4, l0_.vault_id AS vault_id_5, l0_.category_id AS category_id_6, n1_.user_id AS user_id_7, n1_.vault_id AS vault_id_8, n1_.category_id AS category_id_9 FROM vault v2_ LEFT JOIN login l0_ ON (l0_.vault_id = v2_.id) LEFT JOIN note n1_ ON (n1_.vault_id = v2_.id) WHERE v2_.id = ? AND v2_.user_id = ? (parameters: array{"1":"������N���BZT���","2":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2,"2":2}) {"sql":"SELECT l0_.id AS id_0, l0_.data AS data_1, n1_.id AS id_2, n1_.data AS data_3, l0_.user_id AS user_id_4, l0_.vault_id AS vault_id_5, l0_.category_id AS category_id_6, n1_.user_id AS user_id_7, n1_.vault_id AS vault_id_8, n1_.category_id AS category_id_9 FROM vault v2_ LEFT JOIN login l0_ ON (l0_.vault_id = v2_.id) LEFT JOIN note n1_ ON (n1_.vault_id = v2_.id) WHERE v2_.id = ? AND v2_.user_id = ?","params":{"1":"������N���BZT���","2":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2,"2":2}} []
[2024-04-24T08:37:47.534731+05:30] security.DEBUG: Stored the security token in the session. {"key":"_security_authentication"} []
[2024-04-24T08:37:47.535642+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:37:47.535828+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:37:47.536104+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:37:47.536313+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:37:47.536785+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:37:47.537087+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:37:47.537541+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:37:47.537669+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:37:47.537901+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:37:47.538694+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:37:47.538786+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:37:47.539245+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:37:47.540094+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:37:47.541060+05:30] security.DEBUG: Read existing security token from the session. {"key":"_security_authentication","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2024-04-24T08:37:47.542677+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:37:47.543264+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ? (parameters: array{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ?","params":{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2}} []
[2024-04-24T08:37:47.545071+05:30] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"thecodefreaker4"} []
[2024-04-24T08:37:47.545589+05:30] php.INFO: User Deprecated: Since symfony/http-kernel 5.1: Referencing controllers with a single colon is deprecated. Use "App\Controller\CategoryController::list" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/http-kernel 5.1: Referencing controllers with a single colon is deprecated. Use \"App\\Controller\\CategoryController::list\" instead. at /home/kaliuser/test/api/vendor/symfony/http-kernel/Controller/ContainerControllerResolver.php:39)"} []
[2024-04-24T08:37:47.546326+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4 FROM category t0 WHERE t0.user_id = ? (parameters: array{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4 FROM category t0 WHERE t0.user_id = ?","params":{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2}} []
[2024-04-24T08:37:47.548425+05:30] security.DEBUG: Stored the security token in the session. {"key":"_security_authentication"} []
[2024-04-24T08:37:47.549374+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:37:47.549680+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:37:47.550092+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:37:47.550253+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:37:47.550657+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:37:47.550825+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:37:47.551203+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:37:47.551414+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:37:47.551767+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:37:47.552808+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:37:47.553088+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:37:47.553715+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:37:47.553877+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:37:47.555014+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:37:47.570711+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:38:28.628189+05:30] request.INFO: Matched route "logins_create". {"route":"logins_create","route_parameters":{"_route":"logins_create","_controller":"App\\Controller\\LoginController::create"},"request_uri":"http://localhost:8000/logins","method":"POST"} []
[2024-04-24T08:38:28.629459+05:30] security.DEBUG: Read existing security token from the session. {"key":"_security_authentication","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2024-04-24T08:38:28.631223+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:38:28.631708+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ? (parameters: array{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ?","params":{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2}} []
[2024-04-24T08:38:28.633187+05:30] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"thecodefreaker4"} []
[2024-04-24T08:38:28.633251+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T08:38:28.633286+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:38:28.633508+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:38:28.634640+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3 FROM vault t0 WHERE t0.id = ? (parameters: array{"1":"������N���BZT���"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3 FROM vault t0 WHERE t0.id = ?","params":{"1":"������N���BZT���"},"types":{"1":2}} []
[2024-04-24T08:38:28.635259+05:30] doctrine.DEBUG: Beginning transaction [] []
[2024-04-24T08:38:28.635598+05:30] doctrine.DEBUG: Executing statement: INSERT INTO login (id, data, user_id, vault_id, category_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"\"\n\r�Q�DL�\u0005*Tޚ\u0019l","2":"9fec0df8f6e6361ec64df5dbb8a32c131efe080d0c9857bac5fcb024d9d3570b23b0f9fd21f39442d1116ba93ffdce8dfa5da70786c7e06f3e65aa3e17d27ead57dc315590bd88ec89652252e6da3fe44d5910e2a5ab6ca872a43c738b78fe1de4397489f5891aa32f8ff9502b23c938255f3debdc9e3235c853aac54b8aace6f8fe4b0844f708403c04e32151485c0eb4e51d89ac3a962a2ecd0e3581d60863054ae03e8207e740ab9b7ce3472349ce49e22fd786bc33bb6966351e110c8e9b38822b8b950b61a235aa3f562f053c81ffc6810caad1d3d59ce375d87b53afda37bf9589903fb20cdfc2d27d830b8118","3":"�e\u0001\"!�Fƞ�\u0018P³\u0002�","4":"������N���BZT���","5":null}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2}) {"sql":"INSERT INTO login (id, data, user_id, vault_id, category_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"\"\n\r�Q�DL�\u0005*Tޚ\u0019l","2":"9fec0df8f6e6361ec64df5dbb8a32c131efe080d0c9857bac5fcb024d9d3570b23b0f9fd21f39442d1116ba93ffdce8dfa5da70786c7e06f3e65aa3e17d27ead57dc315590bd88ec89652252e6da3fe44d5910e2a5ab6ca872a43c738b78fe1de4397489f5891aa32f8ff9502b23c938255f3debdc9e3235c853aac54b8aace6f8fe4b0844f708403c04e32151485c0eb4e51d89ac3a962a2ecd0e3581d60863054ae03e8207e740ab9b7ce3472349ce49e22fd786bc33bb6966351e110c8e9b38822b8b950b61a235aa3f562f053c81ffc6810caad1d3d59ce375d87b53afda37bf9589903fb20cdfc2d27d830b8118","3":"�e\u0001\"!�Fƞ�\u0018P³\u0002�","4":"������N���BZT���","5":null},"types":{"1":2,"2":2,"3":2,"4":2,"5":2}} []
[2024-04-24T08:38:28.635803+05:30] doctrine.DEBUG: Committing transaction [] []
[2024-04-24T08:38:28.637984+05:30] security.DEBUG: Stored the security token in the session. {"key":"_security_authentication"} []
[2024-04-24T08:38:28.638913+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:38:28.639152+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:38:28.639438+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:38:28.639507+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:38:28.639741+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:38:28.639815+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:38:28.640092+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:38:28.640272+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:38:28.640657+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:38:28.641658+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:38:28.641948+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:38:28.642476+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:38:28.643244+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:38:28.656262+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:39:14.349410+05:30] request.INFO: Matched route "categories". {"route":"categories","route_parameters":{"_route":"categories","_controller":"App\\Controller\\CategoryController:list"},"request_uri":"http://localhost:8000/categories","method":"GET"} []
[2024-04-24T08:39:14.350681+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T08:39:14.350743+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:39:14.350780+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:39:14.353033+05:30] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/kaliuser/test/api/vendor/symfony/security-http/Firewall/AccessListener.php:112)"} []
[2024-04-24T08:39:14.353123+05:30] security.DEBUG: Calling Authentication entry point. [] []
[2024-04-24T08:39:14.355158+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:39:14.355642+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:39:14.355873+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:39:14.356228+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:39:14.356317+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:39:14.356605+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:39:14.356690+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:39:14.356997+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:39:14.357088+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:39:14.357394+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:39:14.358224+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:39:14.358344+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:39:14.358827+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:39:14.359703+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:39:14.376801+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:39:37.602407+05:30] request.INFO: Matched route "_profiler". {"route":"_profiler","route_parameters":{"_route":"_profiler","_controller":"web_profiler.controller.profiler::panelAction","token":"7fbadc"},"request_uri":"http://localhost:8000/_profiler/7fbadc","method":"GET"} []
[2024-04-24T08:39:37.606145+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:39:37.606659+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:39:37.606926+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:39:37.607373+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:39:37.607482+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:39:37.607841+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:39:37.607945+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:39:37.608541+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:39:37.608790+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:39:37.609170+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:39:37.610103+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:39:37.610245+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:39:37.610729+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:39:37.611592+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:39:37.623959+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:39:44.248101+05:30] request.INFO: Matched route "_profiler_home". {"route":"_profiler_home","route_parameters":{"_route":"_profiler_home","_controller":"web_profiler.controller.profiler::homeAction"},"request_uri":"http://localhost:8000/_profiler/","method":"GET"} []
[2024-04-24T08:39:44.251702+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:39:44.252280+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:39:44.252501+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:39:44.252916+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:39:44.253106+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:39:44.253648+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:39:44.253817+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:39:44.254375+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:39:44.254597+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:39:44.255071+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:39:44.256605+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:39:44.256915+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:39:44.257725+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:39:44.258898+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:39:44.272201+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:40:09.645917+05:30] request.INFO: Matched route "_profiler_search_results". {"route":"_profiler_search_results","route_parameters":{"_route":"_profiler_search_results","_controller":"web_profiler.controller.profiler::searchResultsAction","token":"1e6f17"},"request_uri":"http://127.0.0.1:8000/_profiler/1e6f17/search/results?end=&ip=&limit=10000&method=&start=&status_code=&url=","method":"GET"} []
[2024-04-24T08:40:09.649704+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:40:09.650397+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:40:09.650830+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:40:09.651357+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:40:09.651436+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:40:09.651734+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:40:09.651819+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:40:09.652195+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:40:09.652366+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:40:09.652682+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:40:09.653596+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:40:09.653747+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:40:09.654260+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:40:09.655064+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:40:09.667693+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:40:17.971965+05:30] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://127.0.0.1:8000/_profiler/1e6f17/search/"" at /home/kaliuser/test/api/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://127.0.0.1:8000/_profiler/1e6f17/search/\" at /home/kaliuser/test/api/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/_profiler/1e6f17/search\". at /home/kaliuser/test/api/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2024-04-24T08:40:17.987395+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:40:17.987981+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:40:17.988172+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:40:17.988559+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:40:17.988715+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:40:17.989130+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:40:17.989316+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:40:17.989819+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:40:17.990007+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:40:17.990272+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:40:17.991093+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:40:17.991224+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:40:17.991803+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:40:17.992784+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:40:18.019861+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:40:28.336307+05:30] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://127.0.0.1:8000/_profiler/1e6f17/search"" at /home/kaliuser/test/api/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://127.0.0.1:8000/_profiler/1e6f17/search\" at /home/kaliuser/test/api/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/_profiler/1e6f17/search/\". at /home/kaliuser/test/api/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2024-04-24T08:40:28.351796+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:40:28.352371+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:40:28.352640+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:40:28.353024+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:40:28.353183+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:40:28.353537+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:40:28.353620+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:40:28.353905+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:40:28.353977+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:40:28.354181+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:40:28.354921+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:40:28.355003+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:40:28.355427+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:40:28.356537+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:40:28.384696+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:40:33.684414+05:30] request.INFO: Matched route "_profiler". {"route":"_profiler","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/_profiler/1e6f17","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"_profiler","token":"1e6f17"},"request_uri":"http://127.0.0.1:8000/_profiler/1e6f17/","method":"GET"} []
[2024-04-24T08:40:33.688206+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:40:33.688824+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:40:33.689121+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:40:33.689449+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:40:33.689531+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:40:33.689813+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:40:33.689888+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:40:33.690178+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:40:33.690256+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:40:33.690485+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:40:33.691334+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:40:33.691524+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:40:33.692075+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:40:33.692889+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:40:33.704540+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:40:36.890046+05:30] request.INFO: Matched route "_profiler_home". {"route":"_profiler_home","route_parameters":{"_route":"_profiler_home","_controller":"web_profiler.controller.profiler::homeAction"},"request_uri":"http://127.0.0.1:8000/_profiler/","method":"GET"} []
[2024-04-24T08:40:36.893768+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:40:36.894271+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:40:36.894526+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:40:36.894844+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:40:36.894927+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:40:36.895217+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:40:36.895303+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:40:36.895623+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:40:36.895705+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:40:36.895948+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:40:36.896766+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:40:36.896871+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:40:36.897360+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:40:36.898180+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:40:36.909897+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:55:36.902845+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:55:36.903340+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:55:36.903529+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:55:36.903785+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:55:36.903855+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:55:36.904114+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:55:36.904213+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:55:36.904567+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:55:36.904750+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:55:36.905056+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:55:36.905943+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:55:36.906163+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:55:36.906664+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:55:36.907402+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:55:36.913815+05:30] request.INFO: Matched route "authentication_login". {"route":"authentication_login","route_parameters":{"_route":"authentication_login"},"request_uri":"http://localhost:8000/authentication/login","method":"POST"} []
[2024-04-24T08:55:36.914761+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T08:55:36.914813+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:55:36.916853+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:55:36.917334+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"thecodefreake1r@gmail.com"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"thecodefreake1r@gmail.com"},"types":{"1":2}} []
[2024-04-24T08:55:36.918099+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:55:36.918328+05:30] security.INFO: Authenticator failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\UserNotFoundException(code: 0): User \"thecodefreake1r@gmail.com\" not found. at /home/kaliuser/test/api/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:80)","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:55:36.918578+05:30] security.DEBUG: The "App\Security\Authenticator" authenticator set the failure response. {"authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:55:36.918765+05:30] security.DEBUG: The "App\Security\Authenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:55:36.921662+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:55:36.921925+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:55:36.922231+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:55:36.922374+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:55:36.922647+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:55:36.922724+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:55:36.923007+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:55:36.923076+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:55:36.923335+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:55:36.924058+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:55:36.924249+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:55:36.924768+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:55:36.925504+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:55:36.947227+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:55:45.776636+05:30] request.INFO: Matched route "authentication_login". {"route":"authentication_login","route_parameters":{"_route":"authentication_login"},"request_uri":"http://localhost:8000/authentication/login","method":"POST"} []
[2024-04-24T08:55:45.777778+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T08:55:45.777831+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:55:45.779858+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:55:45.780447+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"thecodefreake2r@gmail.com"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"thecodefreake2r@gmail.com"},"types":{"1":2}} []
[2024-04-24T08:55:45.781189+05:30] security.INFO: Authenticator failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\UserNotFoundException(code: 0): User \"thecodefreake2r@gmail.com\" not found. at /home/kaliuser/test/api/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:80)","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:55:45.781387+05:30] security.DEBUG: The "App\Security\Authenticator" authenticator set the failure response. {"authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:55:45.781448+05:30] security.DEBUG: The "App\Security\Authenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:55:45.784469+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:55:45.784700+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:55:45.785019+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:55:45.785129+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:55:45.785449+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:55:45.785563+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:55:45.785848+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:55:45.785923+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:55:45.786336+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:55:45.787201+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:55:45.787327+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:55:45.787839+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:55:45.788704+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:55:45.810976+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:55:56.287837+05:30] request.INFO: Matched route "authentication_login". {"route":"authentication_login","route_parameters":{"_route":"authentication_login"},"request_uri":"http://localhost:8000/authentication/login","method":"POST"} []
[2024-04-24T08:55:56.288966+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T08:55:56.289016+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:55:56.291024+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:55:56.291468+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"thecodefreaker2@gmail.com"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"thecodefreaker2@gmail.com"},"types":{"1":2}} []
[2024-04-24T08:55:56.292115+05:30] security.INFO: Authenticator failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\UserNotFoundException(code: 0): User \"thecodefreaker2@gmail.com\" not found. at /home/kaliuser/test/api/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:80)","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:55:56.292281+05:30] security.DEBUG: The "App\Security\Authenticator" authenticator set the failure response. {"authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:55:56.292331+05:30] security.DEBUG: The "App\Security\Authenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:55:56.295145+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:55:56.295389+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:55:56.295671+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:55:56.295739+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:55:56.295988+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:55:56.296061+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:55:56.296410+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:55:56.296532+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:55:56.296806+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:55:56.297719+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:55:56.298011+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:55:56.298546+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:55:56.299297+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:55:56.321397+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:55:57.064900+05:30] request.INFO: Matched route "authentication_login". {"route":"authentication_login","route_parameters":{"_route":"authentication_login"},"request_uri":"http://localhost:8000/authentication/login","method":"POST"} []
[2024-04-24T08:55:57.065830+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T08:55:57.065883+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:55:57.067545+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:55:57.067995+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"thecodefreaker2@gmail.com"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"thecodefreaker2@gmail.com"},"types":{"1":2}} []
[2024-04-24T08:55:57.068603+05:30] security.INFO: Authenticator failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\UserNotFoundException(code: 0): User \"thecodefreaker2@gmail.com\" not found. at /home/kaliuser/test/api/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:80)","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:55:57.068768+05:30] security.DEBUG: The "App\Security\Authenticator" authenticator set the failure response. {"authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:55:57.068817+05:30] security.DEBUG: The "App\Security\Authenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:55:57.071493+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:55:57.071774+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:55:57.072027+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:55:57.072109+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:55:57.072456+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:55:57.072649+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:55:57.073169+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:55:57.073394+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:55:57.073778+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:55:57.074590+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:55:57.074717+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:55:57.075164+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:55:57.075954+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:55:57.097722+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:56:56.055854+05:30] request.INFO: Matched route "authentication_register". {"route":"authentication_register","route_parameters":{"_route":"authentication_register","_controller":"App\\Controller\\RegistrationController:register"},"request_uri":"http://localhost:8000/authentication/register","method":"POST"} []
[2024-04-24T08:56:56.056942+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T08:56:56.056992+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:56:56.057196+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:56:56.059819+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:56:56.060299+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:56:56.060529+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:56:56.060842+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:56:56.060967+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:56:56.061298+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:56:56.061381+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:56:56.061683+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:56:56.061757+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:56:56.061960+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:56:56.062795+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:56:56.062892+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:56:56.063335+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:56:56.064077+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:56:56.081933+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:56:57.567822+05:30] request.INFO: Matched route "authentication_register". {"route":"authentication_register","route_parameters":{"_route":"authentication_register","_controller":"App\\Controller\\RegistrationController:register"},"request_uri":"http://localhost:8000/authentication/register","method":"POST"} []
[2024-04-24T08:56:57.568748+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T08:56:57.568799+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:56:57.568993+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:56:57.571345+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:56:57.571868+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:56:57.572024+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:56:57.572342+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:56:57.572556+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:56:57.572971+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:56:57.573200+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:56:57.573748+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:56:57.573876+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:56:57.574135+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:56:57.575064+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:56:57.575168+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:56:57.575674+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:56:57.576444+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:56:57.593940+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:56:58.080168+05:30] request.INFO: Matched route "authentication_register". {"route":"authentication_register","route_parameters":{"_route":"authentication_register","_controller":"App\\Controller\\RegistrationController:register"},"request_uri":"http://localhost:8000/authentication/register","method":"POST"} []
[2024-04-24T08:56:58.081103+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T08:56:58.081156+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:56:58.081361+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:56:58.083820+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:56:58.084292+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:56:58.084514+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:56:58.084874+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:56:58.085076+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:56:58.085416+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:56:58.085535+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:56:58.085840+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:56:58.086006+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:56:58.086311+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:56:58.087167+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:56:58.087374+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:56:58.087911+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:56:58.088671+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:56:58.106329+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:56:58.261594+05:30] request.INFO: Matched route "authentication_register". {"route":"authentication_register","route_parameters":{"_route":"authentication_register","_controller":"App\\Controller\\RegistrationController:register"},"request_uri":"http://localhost:8000/authentication/register","method":"POST"} []
[2024-04-24T08:56:58.262486+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T08:56:58.262537+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:56:58.262733+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:56:58.265165+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:56:58.265789+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:56:58.266030+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:56:58.266360+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:56:58.266541+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:56:58.266884+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:56:58.266994+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:56:58.267284+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:56:58.267362+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:56:58.267566+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:56:58.268299+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:56:58.268497+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:56:58.269083+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:56:58.269995+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:56:58.287508+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:58:07.629059+05:30] request.INFO: Matched route "authentication_register". {"route":"authentication_register","route_parameters":{"_route":"authentication_register","_controller":"App\\Controller\\RegistrationController:register"},"request_uri":"http://localhost:8000/authentication/register","method":"POST"} []
[2024-04-24T08:58:07.630337+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T08:58:07.630405+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:58:07.630641+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:58:07.634095+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:58:07.634592+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:58:07.634908+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:58:07.635496+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:58:07.635650+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:58:07.636041+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:58:07.636235+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:58:07.636678+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:58:07.636807+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:58:07.637132+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:58:07.638198+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:58:07.638429+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:58:07.638958+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:58:07.639808+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:58:07.658337+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:58:47.980028+05:30] request.INFO: Matched route "categories". {"route":"categories","route_parameters":{"_route":"categories","_controller":"App\\Controller\\CategoryController:list"},"request_uri":"http://localhost:8000/categories","method":"GET"} []
[2024-04-24T08:58:47.981210+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T08:58:47.981279+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:58:47.981319+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:58:47.984263+05:30] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/kaliuser/test/api/vendor/symfony/security-http/Firewall/AccessListener.php:112)"} []
[2024-04-24T08:58:47.984416+05:30] security.DEBUG: Calling Authentication entry point. [] []
[2024-04-24T08:58:47.987175+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:58:47.987639+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:58:47.987855+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:58:47.988177+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:58:47.988261+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:58:47.988585+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:58:47.988669+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:58:47.988992+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:58:47.989076+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:58:47.989315+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:58:47.990370+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:58:47.990552+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:58:47.991120+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:58:47.992230+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:58:48.009580+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:59:06.537881+05:30] request.INFO: Matched route "authentication_login". {"route":"authentication_login","route_parameters":{"_route":"authentication_login"},"request_uri":"http://localhost:8000/authentication/login","method":"POST"} []
[2024-04-24T08:59:06.538954+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T08:59:06.539007+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:59:06.541026+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:59:06.541844+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"thecodefreaker1@gmail.com"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"thecodefreaker1@gmail.com"},"types":{"1":2}} []
[2024-04-24T08:59:06.542593+05:30] security.INFO: Authenticator failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\UserNotFoundException(code: 0): User \"thecodefreaker1@gmail.com\" not found. at /home/kaliuser/test/api/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:80)","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:59:06.542770+05:30] security.DEBUG: The "App\Security\Authenticator" authenticator set the failure response. {"authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:59:06.542830+05:30] security.DEBUG: The "App\Security\Authenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:59:06.545668+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:59:06.545984+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:59:06.546354+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:59:06.546514+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:59:06.546866+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:59:06.547003+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:59:06.547362+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:59:06.547444+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:59:06.547668+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:59:06.548576+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:59:06.548791+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:59:06.549297+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:59:06.550115+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:59:06.571081+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:59:12.764220+05:30] request.INFO: Matched route "authentication_login". {"route":"authentication_login","route_parameters":{"_route":"authentication_login"},"request_uri":"http://localhost:8000/authentication/login","method":"POST"} []
[2024-04-24T08:59:12.765291+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T08:59:12.765348+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:59:12.767346+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:59:12.767871+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"thecodefreaker2@gmail.com"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"thecodefreaker2@gmail.com"},"types":{"1":2}} []
[2024-04-24T08:59:12.768596+05:30] security.INFO: Authenticator failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\UserNotFoundException(code: 0): User \"thecodefreaker2@gmail.com\" not found. at /home/kaliuser/test/api/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:80)","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:59:12.768767+05:30] security.DEBUG: The "App\Security\Authenticator" authenticator set the failure response. {"authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:59:12.768821+05:30] security.DEBUG: The "App\Security\Authenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:59:12.771596+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:59:12.771826+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:59:12.772057+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:59:12.772313+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:59:12.772750+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:59:12.772994+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:59:12.773516+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:59:12.773753+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:59:12.774144+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:59:12.774955+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:59:12.775052+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:59:12.775478+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:59:12.776388+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:59:12.797988+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:59:32.615978+05:30] request.INFO: Matched route "authentication_login". {"route":"authentication_login","route_parameters":{"_route":"authentication_login"},"request_uri":"http://localhost:8000/authentication/login","method":"POST"} []
[2024-04-24T08:59:32.617869+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T08:59:32.617945+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:59:32.621116+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:59:32.621763+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"thecodefreaker4@gmail.com"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"thecodefreaker4@gmail.com"},"types":{"1":2}} []
[2024-04-24T08:59:32.704805+05:30] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"thecodefreaker4\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:59:32.705014+05:30] php.INFO: User Deprecated: Since symfony/security-bundle 5.3: Accessing the "security.token_storage" service directly from the container is deprecated, use dependency injection instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-bundle 5.3: Accessing the \"security.token_storage\" service directly from the container is deprecated, use dependency injection instead. at /home/kaliuser/test/api/var/cache/dev/ContainerGRY5Qzo/App_KernelDevDebugContainer.php:1965)"} []
[2024-04-24T08:59:32.706331+05:30] security.DEBUG: The "App\Security\Authenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:59:32.707792+05:30] security.DEBUG: Stored the security token in the session. {"key":"_security_authentication"} []
[2024-04-24T08:59:32.708624+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:59:32.708991+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:59:32.709383+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:59:32.709570+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:59:32.709925+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:59:32.710112+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:59:32.710451+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:59:32.710538+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:59:32.710769+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:59:32.711555+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:59:32.711643+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:59:32.712103+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:59:32.713039+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:59:32.735325+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:59:32.747903+05:30] request.INFO: Matched route "vaults". {"route":"vaults","route_parameters":{"_route":"vaults","_controller":"App\\Controller\\VaultController:list"},"request_uri":"http://localhost:8000/vaults","method":"GET"} []
[2024-04-24T08:59:32.748975+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T08:59:32.749054+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:59:32.749104+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:59:32.749509+05:30] security.DEBUG: Read existing security token from the session. {"key":"_security_authentication","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2024-04-24T08:59:32.751080+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:59:32.751519+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ? (parameters: array{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ?","params":{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2}} []
[2024-04-24T08:59:32.752953+05:30] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"thecodefreaker4"} []
[2024-04-24T08:59:32.753474+05:30] php.INFO: User Deprecated: Since symfony/http-kernel 5.1: Referencing controllers with a single colon is deprecated. Use "App\Controller\VaultController::list" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/http-kernel 5.1: Referencing controllers with a single colon is deprecated. Use \"App\\Controller\\VaultController::list\" instead. at /home/kaliuser/test/api/vendor/symfony/http-kernel/Controller/ContainerControllerResolver.php:39)"} []
[2024-04-24T08:59:32.754273+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3 FROM vault t0 WHERE t0.user_id = ? (parameters: array{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3 FROM vault t0 WHERE t0.user_id = ?","params":{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2}} []
[2024-04-24T08:59:32.754952+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM login t0 WHERE t0.vault_id = ? (parameters: array{"1":"!2c��(OZ�8�\r�-\n["}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM login t0 WHERE t0.vault_id = ?","params":{"1":"!2c��(OZ�8�\r�-\n["},"types":{"1":2}} []
[2024-04-24T08:59:32.755420+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM note t0 WHERE t0.vault_id = ? (parameters: array{"1":"!2c��(OZ�8�\r�-\n["}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM note t0 WHERE t0.vault_id = ?","params":{"1":"!2c��(OZ�8�\r�-\n["},"types":{"1":2}} []
[2024-04-24T08:59:32.755756+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM login t0 WHERE t0.vault_id = ? (parameters: array{"1":"������N���BZT���"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM login t0 WHERE t0.vault_id = ?","params":{"1":"������N���BZT���"},"types":{"1":2}} []
[2024-04-24T08:59:32.756189+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM note t0 WHERE t0.vault_id = ? (parameters: array{"1":"������N���BZT���"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM note t0 WHERE t0.vault_id = ?","params":{"1":"������N���BZT���"},"types":{"1":2}} []
[2024-04-24T08:59:32.758276+05:30] security.DEBUG: Stored the security token in the session. {"key":"_security_authentication"} []
[2024-04-24T08:59:32.759290+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:59:32.759607+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:59:32.760084+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:59:32.760335+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:59:32.760920+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:59:32.761151+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:59:32.761652+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:59:32.761839+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:59:32.762251+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:59:32.763239+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:59:32.763463+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:59:32.764190+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:59:32.765395+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:59:32.787409+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:59:35.496843+05:30] request.INFO: Matched route "categories". {"route":"categories","route_parameters":{"_route":"categories","_controller":"App\\Controller\\CategoryController:list"},"request_uri":"http://localhost:8000/categories","method":"GET"} []
[2024-04-24T08:59:35.496843+05:30] request.INFO: Matched route "vaults_items". {"route":"vaults_items","route_parameters":{"_route":"vaults_items","_controller":"App\\Controller\\VaultController::listItems","id":"a3a98f82-b082-4ebb-acae-425a54e8cbef"},"request_uri":"http://localhost:8000/vaults/a3a98f82-b082-4ebb-acae-425a54e8cbef/items","method":"GET"} []
[2024-04-24T08:59:35.497932+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T08:59:35.497932+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T08:59:35.497993+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:59:35.497997+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:59:35.498031+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:59:35.498034+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:59:35.498467+05:30] security.DEBUG: Read existing security token from the session. {"key":"_security_authentication","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2024-04-24T08:59:35.500498+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:59:35.501219+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ? (parameters: array{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ?","params":{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2}} []
[2024-04-24T08:59:35.502885+05:30] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"thecodefreaker4"} []
[2024-04-24T08:59:35.503447+05:30] php.INFO: User Deprecated: Since symfony/http-kernel 5.1: Referencing controllers with a single colon is deprecated. Use "App\Controller\CategoryController::list" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/http-kernel 5.1: Referencing controllers with a single colon is deprecated. Use \"App\\Controller\\CategoryController::list\" instead. at /home/kaliuser/test/api/vendor/symfony/http-kernel/Controller/ContainerControllerResolver.php:39)"} []
[2024-04-24T08:59:35.504275+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4 FROM category t0 WHERE t0.user_id = ? (parameters: array{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4 FROM category t0 WHERE t0.user_id = ?","params":{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2}} []
[2024-04-24T08:59:35.506290+05:30] security.DEBUG: Stored the security token in the session. {"key":"_security_authentication"} []
[2024-04-24T08:59:35.507218+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:59:35.507384+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:59:35.507710+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:59:35.507798+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:59:35.508162+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:59:35.508327+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:59:35.508874+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:59:35.509013+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:59:35.509354+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:59:35.510544+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:59:35.510721+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:59:35.511301+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:59:35.512296+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:59:35.513351+05:30] security.DEBUG: Read existing security token from the session. {"key":"_security_authentication","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2024-04-24T08:59:35.515048+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:59:35.515477+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ? (parameters: array{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ?","params":{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2}} []
[2024-04-24T08:59:35.517017+05:30] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"thecodefreaker4"} []
[2024-04-24T08:59:35.519235+05:30] doctrine.DEBUG: Executing statement: SELECT l0_.id AS id_0, l0_.data AS data_1, n1_.id AS id_2, n1_.data AS data_3, l0_.user_id AS user_id_4, l0_.vault_id AS vault_id_5, l0_.category_id AS category_id_6, n1_.user_id AS user_id_7, n1_.vault_id AS vault_id_8, n1_.category_id AS category_id_9 FROM vault v2_ LEFT JOIN login l0_ ON (l0_.vault_id = v2_.id) LEFT JOIN note n1_ ON (n1_.vault_id = v2_.id) WHERE v2_.id = ? AND v2_.user_id = ? (parameters: array{"1":"������N���BZT���","2":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2,"2":2}) {"sql":"SELECT l0_.id AS id_0, l0_.data AS data_1, n1_.id AS id_2, n1_.data AS data_3, l0_.user_id AS user_id_4, l0_.vault_id AS vault_id_5, l0_.category_id AS category_id_6, n1_.user_id AS user_id_7, n1_.vault_id AS vault_id_8, n1_.category_id AS category_id_9 FROM vault v2_ LEFT JOIN login l0_ ON (l0_.vault_id = v2_.id) LEFT JOIN note n1_ ON (n1_.vault_id = v2_.id) WHERE v2_.id = ? AND v2_.user_id = ?","params":{"1":"������N���BZT���","2":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2,"2":2}} []
[2024-04-24T08:59:35.522038+05:30] security.DEBUG: Stored the security token in the session. {"key":"_security_authentication"} []
[2024-04-24T08:59:35.522894+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:59:35.523077+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:59:35.523385+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:59:35.523498+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:59:35.523808+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:59:35.523918+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:59:35.524304+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:59:35.524553+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:59:35.524950+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:59:35.525752+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:59:35.525895+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:59:35.526360+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:59:35.527312+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:59:35.532040+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:59:35.550995+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T08:59:50.859768+05:30] request.INFO: Matched route "vaults". {"route":"vaults","route_parameters":{"_route":"vaults","_controller":"App\\Controller\\VaultController:list"},"request_uri":"http://localhost:8000/vaults","method":"GET"} []
[2024-04-24T08:59:50.861321+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T08:59:50.861408+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:59:50.861453+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T08:59:50.861899+05:30] security.DEBUG: Read existing security token from the session. {"key":"_security_authentication","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2024-04-24T08:59:50.863848+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T08:59:50.864347+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ? (parameters: array{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ?","params":{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2}} []
[2024-04-24T08:59:50.866069+05:30] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"thecodefreaker4"} []
[2024-04-24T08:59:50.866727+05:30] php.INFO: User Deprecated: Since symfony/http-kernel 5.1: Referencing controllers with a single colon is deprecated. Use "App\Controller\VaultController::list" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/http-kernel 5.1: Referencing controllers with a single colon is deprecated. Use \"App\\Controller\\VaultController::list\" instead. at /home/kaliuser/test/api/vendor/symfony/http-kernel/Controller/ContainerControllerResolver.php:39)"} []
[2024-04-24T08:59:50.867589+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3 FROM vault t0 WHERE t0.user_id = ? (parameters: array{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3 FROM vault t0 WHERE t0.user_id = ?","params":{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2}} []
[2024-04-24T08:59:50.868269+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM login t0 WHERE t0.vault_id = ? (parameters: array{"1":"!2c��(OZ�8�\r�-\n["}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM login t0 WHERE t0.vault_id = ?","params":{"1":"!2c��(OZ�8�\r�-\n["},"types":{"1":2}} []
[2024-04-24T08:59:50.868820+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM note t0 WHERE t0.vault_id = ? (parameters: array{"1":"!2c��(OZ�8�\r�-\n["}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM note t0 WHERE t0.vault_id = ?","params":{"1":"!2c��(OZ�8�\r�-\n["},"types":{"1":2}} []
[2024-04-24T08:59:50.869220+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM login t0 WHERE t0.vault_id = ? (parameters: array{"1":"������N���BZT���"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM login t0 WHERE t0.vault_id = ?","params":{"1":"������N���BZT���"},"types":{"1":2}} []
[2024-04-24T08:59:50.869760+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM note t0 WHERE t0.vault_id = ? (parameters: array{"1":"������N���BZT���"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM note t0 WHERE t0.vault_id = ?","params":{"1":"������N���BZT���"},"types":{"1":2}} []
[2024-04-24T08:59:50.871671+05:30] security.DEBUG: Stored the security token in the session. {"key":"_security_authentication"} []
[2024-04-24T08:59:50.872736+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:59:50.873159+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:59:50.873596+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:59:50.873695+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T08:59:50.874039+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:59:50.874135+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:59:50.874615+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:59:50.874705+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:59:50.874996+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T08:59:50.876167+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:59:50.876348+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T08:59:50.876969+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T08:59:50.877859+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T08:59:50.898221+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T09:00:46.875405+05:30] request.INFO: Matched route "authentication_register". {"route":"authentication_register","route_parameters":{"_route":"authentication_register","_controller":"App\\Controller\\RegistrationController:register"},"request_uri":"http://localhost:8000/authentication/register","method":"POST"} []
[2024-04-24T09:00:46.876695+05:30] security.DEBUG: Read existing security token from the session. {"key":"_security_authentication","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2024-04-24T09:00:46.878491+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T09:00:46.879041+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ? (parameters: array{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ?","params":{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2}} []
[2024-04-24T09:00:46.880386+05:30] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"thecodefreaker4"} []
[2024-04-24T09:00:46.880448+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T09:00:46.880482+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T09:00:46.880706+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T09:00:46.880991+05:30] php.INFO: User Deprecated: Since symfony/http-kernel 5.1: Referencing controllers with a single colon is deprecated. Use "App\Controller\RegistrationController::register" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/http-kernel 5.1: Referencing controllers with a single colon is deprecated. Use \"App\\Controller\\RegistrationController::register\" instead. at /home/kaliuser/test/api/vendor/symfony/http-kernel/Controller/ContainerControllerResolver.php:39)"} []
[2024-04-24T09:00:46.949457+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.email = ? (parameters: array{"1":"thecodefreaker6@gmail.com"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.email = ?","params":{"1":"thecodefreaker6@gmail.com"},"types":{"1":2}} []
[2024-04-24T09:00:47.031229+05:30] doctrine.DEBUG: Beginning transaction [] []
[2024-04-24T09:00:47.031666+05:30] doctrine.DEBUG: Executing statement: INSERT INTO user (id, first_name, last_name, username, email, password, roles, registered_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":"yA\u0000i$�J\u000b��x5�!�","2":"newways","3":"test","4":"just","5":"thecodefreaker6@gmail.com","6":"wrY486qoMy/4GsE/IMhiIu8Ok2rk1EpmN3V6iQzysy4=","7":"[\"ROLE_USER\"]","8":"2024-04-24 05:30:47"}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2}) {"sql":"INSERT INTO user (id, first_name, last_name, username, email, password, roles, registered_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":"yA\u0000i$�J\u000b��x5�!�","2":"newways","3":"test","4":"just","5":"thecodefreaker6@gmail.com","6":"wrY486qoMy/4GsE/IMhiIu8Ok2rk1EpmN3V6iQzysy4=","7":"[\"ROLE_USER\"]","8":"2024-04-24 05:30:47"},"types":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2}} []
[2024-04-24T09:00:47.032008+05:30] doctrine.DEBUG: Committing transaction [] []
[2024-04-24T09:00:47.035137+05:30] security.DEBUG: Stored the security token in the session. {"key":"_security_authentication"} []
[2024-04-24T09:00:47.036394+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T09:00:47.036682+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T09:00:47.037136+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T09:00:47.037345+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T09:00:47.037971+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T09:00:47.038191+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T09:00:47.038783+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T09:00:47.038999+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T09:00:47.039463+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T09:00:47.040896+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T09:00:47.041219+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T09:00:47.042052+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T09:00:47.043575+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T09:00:47.070070+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T10:33:33.817198+05:30] request.INFO: Matched route "authentication_login". {"route":"authentication_login","route_parameters":{"_route":"authentication_login"},"request_uri":"http://localhost:8000/authentication/login","method":"POST"} []
[2024-04-24T10:33:33.822790+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T10:33:33.822859+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T10:33:33.830384+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T10:33:33.831225+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"thecodefreaker4@gmail.com"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"thecodefreaker4@gmail.com"},"types":{"1":2}} []
[2024-04-24T10:33:33.920718+05:30] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"thecodefreaker4\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T10:33:33.920998+05:30] php.INFO: User Deprecated: Since symfony/security-bundle 5.3: Accessing the "security.token_storage" service directly from the container is deprecated, use dependency injection instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-bundle 5.3: Accessing the \"security.token_storage\" service directly from the container is deprecated, use dependency injection instead. at /home/kaliuser/test/api/var/cache/dev/ContainerGRY5Qzo/App_KernelDevDebugContainer.php:1965)"} []
[2024-04-24T10:33:33.924788+05:30] security.DEBUG: The "App\Security\Authenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T10:33:33.929903+05:30] security.DEBUG: Stored the security token in the session. {"key":"_security_authentication"} []
[2024-04-24T10:33:33.931724+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:33:33.932412+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T10:33:33.933988+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:33:33.934180+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T10:33:33.934941+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:33:33.935132+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T10:33:33.936859+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:33:33.937135+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T10:33:33.937855+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T10:33:33.941122+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:33:33.941404+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T10:33:33.942269+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T10:33:33.943599+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:33:33.975978+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T10:33:33.990600+05:30] request.INFO: Matched route "vaults". {"route":"vaults","route_parameters":{"_route":"vaults","_controller":"App\\Controller\\VaultController:list"},"request_uri":"http://localhost:8000/vaults","method":"GET"} []
[2024-04-24T10:33:33.991931+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T10:33:33.992075+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T10:33:33.992146+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T10:33:33.992570+05:30] security.DEBUG: Read existing security token from the session. {"key":"_security_authentication","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2024-04-24T10:33:33.994518+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T10:33:33.995162+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ? (parameters: array{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ?","params":{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2}} []
[2024-04-24T10:33:33.996722+05:30] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"thecodefreaker4"} []
[2024-04-24T10:33:33.997230+05:30] php.INFO: User Deprecated: Since symfony/http-kernel 5.1: Referencing controllers with a single colon is deprecated. Use "App\Controller\VaultController::list" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/http-kernel 5.1: Referencing controllers with a single colon is deprecated. Use \"App\\Controller\\VaultController::list\" instead. at /home/kaliuser/test/api/vendor/symfony/http-kernel/Controller/ContainerControllerResolver.php:39)"} []
[2024-04-24T10:33:33.998123+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3 FROM vault t0 WHERE t0.user_id = ? (parameters: array{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3 FROM vault t0 WHERE t0.user_id = ?","params":{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2}} []
[2024-04-24T10:33:34.000970+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM login t0 WHERE t0.vault_id = ? (parameters: array{"1":"!2c��(OZ�8�\r�-\n["}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM login t0 WHERE t0.vault_id = ?","params":{"1":"!2c��(OZ�8�\r�-\n["},"types":{"1":2}} []
[2024-04-24T10:33:34.001586+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM note t0 WHERE t0.vault_id = ? (parameters: array{"1":"!2c��(OZ�8�\r�-\n["}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM note t0 WHERE t0.vault_id = ?","params":{"1":"!2c��(OZ�8�\r�-\n["},"types":{"1":2}} []
[2024-04-24T10:33:34.002247+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM login t0 WHERE t0.vault_id = ? (parameters: array{"1":"������N���BZT���"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM login t0 WHERE t0.vault_id = ?","params":{"1":"������N���BZT���"},"types":{"1":2}} []
[2024-04-24T10:33:34.002879+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM note t0 WHERE t0.vault_id = ? (parameters: array{"1":"������N���BZT���"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM note t0 WHERE t0.vault_id = ?","params":{"1":"������N���BZT���"},"types":{"1":2}} []
[2024-04-24T10:33:34.005536+05:30] security.DEBUG: Stored the security token in the session. {"key":"_security_authentication"} []
[2024-04-24T10:33:34.006577+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:33:34.006811+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T10:33:34.007097+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:33:34.007169+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T10:33:34.007422+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:33:34.007567+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T10:33:34.008547+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:33:34.008641+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T10:33:34.008897+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T10:33:34.009874+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:33:34.009987+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T10:33:34.010482+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T10:33:34.011420+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:33:34.027910+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T10:33:41.607538+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T10:33:41.608369+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:33:41.608696+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T10:33:41.609126+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:33:41.609313+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T10:33:41.609851+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:33:41.610076+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T10:33:41.610630+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:33:41.610852+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T10:33:41.611264+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T10:33:41.612684+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:33:41.613006+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T10:33:41.613795+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T10:33:41.614963+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:33:41.627183+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T10:33:41.698266+05:30] request.INFO: Matched route "vaults_update". {"route":"vaults_update","route_parameters":{"_route":"vaults_update","_controller":"App\\Controller\\VaultController::update","id":"a3a98f82-b082-4ebb-acae-425a54e8cbef"},"request_uri":"http://localhost:8000/vaults/a3a98f82-b082-4ebb-acae-425a54e8cbef","method":"PUT"} []
[2024-04-24T10:33:41.699507+05:30] security.DEBUG: Read existing security token from the session. {"key":"_security_authentication","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2024-04-24T10:33:41.701180+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T10:33:41.701835+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ? (parameters: array{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ?","params":{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2}} []
[2024-04-24T10:33:41.703269+05:30] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"thecodefreaker4"} []
[2024-04-24T10:33:41.703331+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T10:33:41.703367+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T10:33:41.703400+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T10:33:41.704772+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3 FROM vault t0 WHERE t0.id = ? AND t0.user_id = ? LIMIT 1 (parameters: array{"1":"������N���BZT���","2":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2,"2":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3 FROM vault t0 WHERE t0.id = ? AND t0.user_id = ? LIMIT 1","params":{"1":"������N���BZT���","2":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2,"2":2}} []
[2024-04-24T10:33:41.706838+05:30] security.DEBUG: Stored the security token in the session. {"key":"_security_authentication"} []
[2024-04-24T10:33:41.707607+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:33:41.707837+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T10:33:41.708089+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:33:41.708305+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T10:33:41.708717+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:33:41.708931+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T10:33:41.709456+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:33:41.709702+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T10:33:41.710035+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T10:33:41.710839+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:33:41.710933+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T10:33:41.711356+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T10:33:41.712133+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:33:41.724602+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T10:33:45.024156+05:30] request.INFO: Matched route "categories". {"route":"categories","route_parameters":{"_route":"categories","_controller":"App\\Controller\\CategoryController:list"},"request_uri":"http://localhost:8000/categories","method":"GET"} []
[2024-04-24T10:33:45.025327+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T10:33:45.025403+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T10:33:45.025442+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T10:33:45.025902+05:30] security.DEBUG: Read existing security token from the session. {"key":"_security_authentication","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2024-04-24T10:33:45.027907+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T10:33:45.028703+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ? (parameters: array{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ?","params":{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2}} []
[2024-04-24T10:33:45.030330+05:30] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"thecodefreaker4"} []
[2024-04-24T10:33:45.030878+05:30] php.INFO: User Deprecated: Since symfony/http-kernel 5.1: Referencing controllers with a single colon is deprecated. Use "App\Controller\CategoryController::list" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/http-kernel 5.1: Referencing controllers with a single colon is deprecated. Use \"App\\Controller\\CategoryController::list\" instead. at /home/kaliuser/test/api/vendor/symfony/http-kernel/Controller/ContainerControllerResolver.php:39)"} []
[2024-04-24T10:33:45.031702+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4 FROM category t0 WHERE t0.user_id = ? (parameters: array{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4 FROM category t0 WHERE t0.user_id = ?","params":{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2}} []
[2024-04-24T10:33:45.031838+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T10:33:45.032373+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:33:45.032624+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T10:33:45.033007+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:33:45.033117+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T10:33:45.033446+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:33:45.033532+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T10:33:45.033840+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:33:45.033880+05:30] security.DEBUG: Stored the security token in the session. {"key":"_security_authentication"} []
[2024-04-24T10:33:45.033919+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T10:33:45.034130+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T10:33:45.034741+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:33:45.034904+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:33:45.034898+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T10:33:45.035003+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T10:33:45.035100+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:33:45.035174+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T10:33:45.035403+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:33:45.035464+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T10:33:45.035480+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T10:33:45.035885+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:33:45.035962+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T10:33:45.036185+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T10:33:45.036313+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:33:45.036936+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:33:45.037060+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T10:33:45.037520+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T10:33:45.038359+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:33:45.047342+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T10:33:45.050360+05:30] request.INFO: Matched route "vaults_items". {"route":"vaults_items","route_parameters":{"_route":"vaults_items","_controller":"App\\Controller\\VaultController::listItems","id":"213263a3-d428-4f5a-b838-ba0dfa2d0a5b"},"request_uri":"http://localhost:8000/vaults/213263a3-d428-4f5a-b838-ba0dfa2d0a5b/items","method":"GET"} []
[2024-04-24T10:33:45.051137+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T10:33:45.051193+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T10:33:45.051230+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T10:33:45.051531+05:30] security.DEBUG: Read existing security token from the session. {"key":"_security_authentication","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2024-04-24T10:33:45.052877+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T10:33:45.053042+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T10:33:45.053425+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ? (parameters: array{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ?","params":{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2}} []
[2024-04-24T10:33:45.054877+05:30] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"thecodefreaker4"} []
[2024-04-24T10:33:45.057483+05:30] doctrine.DEBUG: Executing statement: SELECT l0_.id AS id_0, l0_.data AS data_1, n1_.id AS id_2, n1_.data AS data_3, l0_.user_id AS user_id_4, l0_.vault_id AS vault_id_5, l0_.category_id AS category_id_6, n1_.user_id AS user_id_7, n1_.vault_id AS vault_id_8, n1_.category_id AS category_id_9 FROM vault v2_ LEFT JOIN login l0_ ON (l0_.vault_id = v2_.id) LEFT JOIN note n1_ ON (n1_.vault_id = v2_.id) WHERE v2_.id = ? AND v2_.user_id = ? (parameters: array{"1":"!2c��(OZ�8�\r�-\n[","2":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2,"2":2}) {"sql":"SELECT l0_.id AS id_0, l0_.data AS data_1, n1_.id AS id_2, n1_.data AS data_3, l0_.user_id AS user_id_4, l0_.vault_id AS vault_id_5, l0_.category_id AS category_id_6, n1_.user_id AS user_id_7, n1_.vault_id AS vault_id_8, n1_.category_id AS category_id_9 FROM vault v2_ LEFT JOIN login l0_ ON (l0_.vault_id = v2_.id) LEFT JOIN note n1_ ON (n1_.vault_id = v2_.id) WHERE v2_.id = ? AND v2_.user_id = ?","params":{"1":"!2c��(OZ�8�\r�-\n[","2":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2,"2":2}} []
[2024-04-24T10:33:45.059212+05:30] security.DEBUG: Stored the security token in the session. {"key":"_security_authentication"} []
[2024-04-24T10:33:45.060025+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:33:45.060266+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T10:33:45.060585+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:33:45.060737+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T10:33:45.061078+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:33:45.061224+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T10:33:45.061562+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:33:45.061643+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T10:33:45.061848+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T10:33:45.062676+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:33:45.062765+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T10:33:45.063209+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T10:33:45.064030+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:33:45.076399+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T10:33:53.744106+05:30] request.INFO: Matched route "categories_create". {"route":"categories_create","route_parameters":{"_route":"categories_create","_controller":"App\\Controller\\CategoryController::create"},"request_uri":"http://localhost:8000/categories","method":"POST"} []
[2024-04-24T10:33:53.745367+05:30] security.DEBUG: Read existing security token from the session. {"key":"_security_authentication","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2024-04-24T10:33:53.747053+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T10:33:53.747669+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ? (parameters: array{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ?","params":{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2}} []
[2024-04-24T10:33:53.749111+05:30] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"thecodefreaker4"} []
[2024-04-24T10:33:53.749173+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T10:33:53.749207+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T10:33:53.749430+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T10:33:53.750577+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3 FROM vault t0 WHERE t0.id = ? (parameters: array{"1":"!2c��(OZ�8�\r�-\n["}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3 FROM vault t0 WHERE t0.id = ?","params":{"1":"!2c��(OZ�8�\r�-\n["},"types":{"1":2}} []
[2024-04-24T10:33:53.751254+05:30] doctrine.DEBUG: Beginning transaction [] []
[2024-04-24T10:33:53.751802+05:30] doctrine.DEBUG: Executing statement: INSERT INTO category (id, data, user_id, vault_id) VALUES (?, ?, ?, ?) (parameters: array{"1":"C�и��@8�N��tc-_","2":"6fb87a92ee1304e6aff44ca67f6903a25046fc7da4e5987303ff2cd84814642e","3":"�e\u0001\"!�Fƞ�\u0018P³\u0002�","4":"!2c��(OZ�8�\r�-\n["}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO category (id, data, user_id, vault_id) VALUES (?, ?, ?, ?)","params":{"1":"C�и��@8�N��tc-_","2":"6fb87a92ee1304e6aff44ca67f6903a25046fc7da4e5987303ff2cd84814642e","3":"�e\u0001\"!�Fƞ�\u0018P³\u0002�","4":"!2c��(OZ�8�\r�-\n["},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2024-04-24T10:33:53.754297+05:30] doctrine.DEBUG: Committing transaction [] []
[2024-04-24T10:33:53.758109+05:30] security.DEBUG: Stored the security token in the session. {"key":"_security_authentication"} []
[2024-04-24T10:33:53.759065+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:33:53.759307+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T10:33:53.759615+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:33:53.759693+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T10:33:53.759960+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:33:53.760041+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T10:33:53.760362+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:33:53.760441+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T10:33:53.760659+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T10:33:53.761609+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:33:53.761833+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T10:33:53.762398+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T10:33:53.763703+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:33:53.777033+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T10:34:02.555469+05:30] request.INFO: Matched route "vaults". {"route":"vaults","route_parameters":{"_route":"vaults","_controller":"App\\Controller\\VaultController:list"},"request_uri":"http://localhost:8000/vaults","method":"GET"} []
[2024-04-24T10:34:02.557406+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T10:34:02.557500+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T10:34:02.557539+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T10:34:02.557951+05:30] security.DEBUG: Read existing security token from the session. {"key":"_security_authentication","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2024-04-24T10:34:02.560117+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T10:34:02.560728+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ? (parameters: array{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ?","params":{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2}} []
[2024-04-24T10:34:02.562447+05:30] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"thecodefreaker4"} []
[2024-04-24T10:34:02.562994+05:30] php.INFO: User Deprecated: Since symfony/http-kernel 5.1: Referencing controllers with a single colon is deprecated. Use "App\Controller\VaultController::list" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/http-kernel 5.1: Referencing controllers with a single colon is deprecated. Use \"App\\Controller\\VaultController::list\" instead. at /home/kaliuser/test/api/vendor/symfony/http-kernel/Controller/ContainerControllerResolver.php:39)"} []
[2024-04-24T10:34:02.563752+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3 FROM vault t0 WHERE t0.user_id = ? (parameters: array{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3 FROM vault t0 WHERE t0.user_id = ?","params":{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2}} []
[2024-04-24T10:34:02.564495+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM login t0 WHERE t0.vault_id = ? (parameters: array{"1":"!2c��(OZ�8�\r�-\n["}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM login t0 WHERE t0.vault_id = ?","params":{"1":"!2c��(OZ�8�\r�-\n["},"types":{"1":2}} []
[2024-04-24T10:34:02.565213+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM note t0 WHERE t0.vault_id = ? (parameters: array{"1":"!2c��(OZ�8�\r�-\n["}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM note t0 WHERE t0.vault_id = ?","params":{"1":"!2c��(OZ�8�\r�-\n["},"types":{"1":2}} []
[2024-04-24T10:34:02.565852+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM login t0 WHERE t0.vault_id = ? (parameters: array{"1":"������N���BZT���"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM login t0 WHERE t0.vault_id = ?","params":{"1":"������N���BZT���"},"types":{"1":2}} []
[2024-04-24T10:34:02.566626+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM note t0 WHERE t0.vault_id = ? (parameters: array{"1":"������N���BZT���"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4, t0.category_id AS category_id_5 FROM note t0 WHERE t0.vault_id = ?","params":{"1":"������N���BZT���"},"types":{"1":2}} []
[2024-04-24T10:34:02.569082+05:30] security.DEBUG: Stored the security token in the session. {"key":"_security_authentication"} []
[2024-04-24T10:34:02.570070+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:34:02.570332+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T10:34:02.570675+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:34:02.570755+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T10:34:02.571055+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:34:02.571141+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T10:34:02.571615+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:34:02.571700+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T10:34:02.571977+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T10:34:02.573063+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:34:02.573166+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T10:34:02.573670+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T10:34:02.574528+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:34:02.589860+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T10:34:13.135135+05:30] request.INFO: Matched route "vaults_create". {"route":"vaults_create","route_parameters":{"_route":"vaults_create","_controller":"App\\Controller\\VaultController::create"},"request_uri":"http://localhost:8000/vaults","method":"POST"} []
[2024-04-24T10:34:13.136363+05:30] security.DEBUG: Read existing security token from the session. {"key":"_security_authentication","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2024-04-24T10:34:13.137983+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T10:34:13.138635+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ? (parameters: array{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ?","params":{"1":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2}} []
[2024-04-24T10:34:13.140200+05:30] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"thecodefreaker4"} []
[2024-04-24T10:34:13.140266+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T10:34:13.140310+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T10:34:13.140533+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T10:34:13.141665+05:30] doctrine.DEBUG: Beginning transaction [] []
[2024-04-24T10:34:13.141987+05:30] doctrine.DEBUG: Executing statement: INSERT INTO vault (id, data, user_id) VALUES (?, ?, ?) (parameters: array{"1":"$�y-�hDE�l�Du�\u0017p","2":"7d0930bd21366d807895a5e2fe1366f4a05ce11a9ccd75f77d4f69df94a5f7a770704c3f2497b54dd7444da84bf1878d","3":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"}, types: array{"1":2,"2":2,"3":2}) {"sql":"INSERT INTO vault (id, data, user_id) VALUES (?, ?, ?)","params":{"1":"$�y-�hDE�l�Du�\u0017p","2":"7d0930bd21366d807895a5e2fe1366f4a05ce11a9ccd75f77d4f69df94a5f7a770704c3f2497b54dd7444da84bf1878d","3":"�e\u0001\"!�Fƞ�\u0018P³\u0002�"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T10:34:13.142569+05:30] doctrine.DEBUG: Committing transaction [] []
[2024-04-24T10:34:13.145226+05:30] security.DEBUG: Stored the security token in the session. {"key":"_security_authentication"} []
[2024-04-24T10:34:13.146077+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:34:13.146399+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T10:34:13.146719+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:34:13.146824+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T10:34:13.147082+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:34:13.147169+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T10:34:13.147560+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:34:13.147636+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T10:34:13.147851+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T10:34:13.148717+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:34:13.148913+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T10:34:13.149384+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T10:34:13.150180+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:34:13.162904+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T10:35:17.606965+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T10:35:17.607538+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:35:17.607735+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T10:35:17.608091+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:35:17.608272+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T10:35:17.608816+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:35:17.609017+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T10:35:17.609661+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:35:17.609858+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T10:35:17.610304+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T10:35:17.611458+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:35:17.611562+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T10:35:17.612076+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T10:35:17.612881+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:35:17.619427+05:30] request.INFO: Matched route "authentication_register". {"route":"authentication_register","route_parameters":{"_route":"authentication_register","_controller":"App\\Controller\\RegistrationController:register"},"request_uri":"http://localhost:8000/authentication/register","method":"POST"} []
[2024-04-24T10:35:17.620422+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T10:35:17.620476+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T10:35:17.620685+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T10:35:17.623206+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T10:35:17.623585+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:35:17.623656+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T10:35:17.623763+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T10:35:17.624139+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:35:17.624338+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T10:35:17.624849+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:35:17.624945+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T10:35:17.625580+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:35:17.625671+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T10:35:17.625964+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T10:35:17.626999+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:35:17.627100+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T10:35:17.627575+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T10:35:17.628338+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:35:17.639714+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T10:35:35.890092+05:30] request.INFO: Matched route "authentication_register". {"route":"authentication_register","route_parameters":{"_route":"authentication_register","_controller":"App\\Controller\\RegistrationController:register"},"request_uri":"http://localhost:8000/authentication/register","method":"POST"} []
[2024-04-24T10:35:35.891372+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T10:35:35.891446+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T10:35:35.891718+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T10:35:35.894945+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T10:35:35.895393+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:35:35.895594+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T10:35:35.895929+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:35:35.896015+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T10:35:35.896591+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:35:35.896846+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T10:35:35.897348+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:35:35.897519+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T10:35:35.897850+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T10:35:35.898959+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:35:35.899159+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T10:35:35.899905+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T10:35:35.901197+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:35:35.914576+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T10:35:48.430649+05:30] request.INFO: Matched route "authentication_register". {"route":"authentication_register","route_parameters":{"_route":"authentication_register","_controller":"App\\Controller\\RegistrationController:register"},"request_uri":"http://localhost:8000/authentication/register","method":"POST"} []
[2024-04-24T10:35:48.431940+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T10:35:48.432006+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T10:35:48.432272+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T10:35:48.435819+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T10:35:48.436446+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:35:48.436721+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T10:35:48.437152+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:35:48.437252+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T10:35:48.437620+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:35:48.437799+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T10:35:48.438368+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:35:48.438560+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T10:35:48.438955+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T10:35:48.440316+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:35:48.440588+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T10:35:48.441255+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T10:35:48.442229+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:35:48.454170+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T10:35:48.611056+05:30] request.INFO: Matched route "authentication_register". {"route":"authentication_register","route_parameters":{"_route":"authentication_register","_controller":"App\\Controller\\RegistrationController:register"},"request_uri":"http://localhost:8000/authentication/register","method":"POST"} []
[2024-04-24T10:35:48.612053+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T10:35:48.612132+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T10:35:48.612378+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T10:35:48.615361+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T10:35:48.615829+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:35:48.616074+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T10:35:48.616498+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:35:48.616639+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T10:35:48.616999+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:35:48.617147+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T10:35:48.617592+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:35:48.617674+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T10:35:48.617899+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T10:35:48.618819+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:35:48.619019+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T10:35:48.619784+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T10:35:48.620757+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:35:48.640226+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T10:36:05.997332+05:30] request.INFO: Matched route "authentication_register". {"route":"authentication_register","route_parameters":{"_route":"authentication_register","_controller":"App\\Controller\\RegistrationController:register"},"request_uri":"http://localhost:8000/authentication/register","method":"POST"} []
[2024-04-24T10:36:05.998558+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T10:36:05.998626+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T10:36:05.998884+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T10:36:06.001880+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T10:36:06.002478+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:36:06.002814+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T10:36:06.003356+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:36:06.003557+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-24T10:36:06.004123+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:36:06.004337+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T10:36:06.005110+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:36:06.005428+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T10:36:06.005900+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-24T10:36:06.007467+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:36:06.007684+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-24T10:36:06.008368+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-24T10:36:06.009351+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-24T10:36:06.021624+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-24T05:13:01.943762+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T05:13:01.953598+00:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 2002): An exception occurred in the driver: SQLSTATE[HY000] [2002] Connection refused at /media/sf_New_Folder/test/api/vendor/doctrine/dbal/src/Driver/API/MySQL/ExceptionConverter.php:101)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 2002): SQLSTATE[HY000] [2002] Connection refused at /media/sf_New_Folder/test/api/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:28)\n[previous exception] [object] (PDOException(code: 2002): SQLSTATE[HY000] [2002] Connection refused at /media/sf_New_Folder/test/api/vendor/doctrine/dbal/src/Driver/PDO/MySQL/Driver.php:33)"} []
[2024-04-24T05:13:02.829572+00:00] php.DEBUG: Warning: filemtime(): stat failed for /home/kaliuser/test/api/config/routes/dev/web_profiler.yaml {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":2,"file":"/media/sf_New_Folder/test/api/vendor/symfony/config/Resource/FileResource.php","line":62,"trace":[{"file":"/media/sf_New_Folder/test/api/vendor/symfony/config/Resource/SelfCheckingResourceChecker.php","line":34,"function":"isFresh","class":"Symfony\\Component\\Config\\Resource\\FileResource","type":"->"}],"count":1}}} []
[2024-04-24T05:13:03.023216+00:00] request.INFO: Matched route "authentication_register". {"route":"authentication_register","route_parameters":{"_route":"authentication_register","_controller":"App\\Controller\\RegistrationController:register"},"request_uri":"http://localhost:8000/authentication/register","method":"POST"} []
[2024-04-24T05:13:03.065419+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T05:13:03.065544+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T05:13:03.074203+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T05:13:03.075049+00:00] php.INFO: User Deprecated: Since symfony/http-kernel 5.1: Referencing controllers with a single colon is deprecated. Use "App\Controller\RegistrationController::register" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/http-kernel 5.1: Referencing controllers with a single colon is deprecated. Use \"App\\Controller\\RegistrationController::register\" instead. at /media/sf_New_Folder/test/api/vendor/symfony/http-kernel/Controller/ContainerControllerResolver.php:39)"} []
[2024-04-24T05:13:04.714232+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T05:13:04.735628+00:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\ConnectionException: "An exception occurred in the driver: SQLSTATE[HY000] [2002] Connection refused" at /media/sf_New_Folder/test/api/vendor/doctrine/dbal/src/Driver/API/MySQL/ExceptionConverter.php line 101 {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 2002): An exception occurred in the driver: SQLSTATE[HY000] [2002] Connection refused at /media/sf_New_Folder/test/api/vendor/doctrine/dbal/src/Driver/API/MySQL/ExceptionConverter.php:101)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 2002): SQLSTATE[HY000] [2002] Connection refused at /media/sf_New_Folder/test/api/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:28)\n[previous exception] [object] (PDOException(code: 2002): SQLSTATE[HY000] [2002] Connection refused at /media/sf_New_Folder/test/api/vendor/doctrine/dbal/src/Driver/PDO/MySQL/Driver.php:33)"} []
[2024-04-24T05:13:04.784158+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T05:13:04.784422+00:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 2002): An exception occurred in the driver: SQLSTATE[HY000] [2002] Connection refused at /media/sf_New_Folder/test/api/vendor/doctrine/dbal/src/Driver/API/MySQL/ExceptionConverter.php:101)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 2002): SQLSTATE[HY000] [2002] Connection refused at /media/sf_New_Folder/test/api/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:28)\n[previous exception] [object] (PDOException(code: 2002): SQLSTATE[HY000] [2002] Connection refused at /media/sf_New_Folder/test/api/vendor/doctrine/dbal/src/Driver/PDO/MySQL/Driver.php:33)"} []
[2024-04-24T05:13:04.785223+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T05:13:04.785440+00:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 2002): An exception occurred in the driver: SQLSTATE[HY000] [2002] Connection refused at /media/sf_New_Folder/test/api/vendor/doctrine/dbal/src/Driver/API/MySQL/ExceptionConverter.php:101)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 2002): SQLSTATE[HY000] [2002] Connection refused at /media/sf_New_Folder/test/api/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:28)\n[previous exception] [object] (PDOException(code: 2002): SQLSTATE[HY000] [2002] Connection refused at /media/sf_New_Folder/test/api/vendor/doctrine/dbal/src/Driver/PDO/MySQL/Driver.php:33)"} []
[2024-04-24T05:14:35.131282+00:00] request.INFO: Matched route "authentication_register". {"route":"authentication_register","route_parameters":{"_route":"authentication_register","_controller":"App\\Controller\\RegistrationController:register"},"request_uri":"http://localhost:8000/authentication/register","method":"POST"} []
[2024-04-24T05:14:35.174717+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T05:14:35.174804+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T05:14:35.180947+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T05:14:35.181621+00:00] php.INFO: User Deprecated: Since symfony/http-kernel 5.1: Referencing controllers with a single colon is deprecated. Use "App\Controller\RegistrationController::register" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/http-kernel 5.1: Referencing controllers with a single colon is deprecated. Use \"App\\Controller\\RegistrationController::register\" instead. at /media/sf_New_Folder/test/api/vendor/symfony/http-kernel/Controller/ContainerControllerResolver.php:39)"} []
[2024-04-24T05:14:35.529011+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T05:14:35.548236+00:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\ConnectionException: "An exception occurred in the driver: SQLSTATE[HY000] [1049] Unknown database 'vault1'" at /media/sf_New_Folder/test/api/vendor/doctrine/dbal/src/Driver/API/MySQL/ExceptionConverter.php line 101 {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 1049): An exception occurred in the driver: SQLSTATE[HY000] [1049] Unknown database 'vault1' at /media/sf_New_Folder/test/api/vendor/doctrine/dbal/src/Driver/API/MySQL/ExceptionConverter.php:101)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 1049): SQLSTATE[HY000] [1049] Unknown database 'vault1' at /media/sf_New_Folder/test/api/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:28)\n[previous exception] [object] (PDOException(code: 1049): SQLSTATE[HY000] [1049] Unknown database 'vault1' at /media/sf_New_Folder/test/api/vendor/doctrine/dbal/src/Driver/PDO/MySQL/Driver.php:33)"} []
[2024-04-24T05:14:35.568223+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T05:14:35.568676+00:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 1049): An exception occurred in the driver: SQLSTATE[HY000] [1049] Unknown database 'vault1' at /media/sf_New_Folder/test/api/vendor/doctrine/dbal/src/Driver/API/MySQL/ExceptionConverter.php:101)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 1049): SQLSTATE[HY000] [1049] Unknown database 'vault1' at /media/sf_New_Folder/test/api/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:28)\n[previous exception] [object] (PDOException(code: 1049): SQLSTATE[HY000] [1049] Unknown database 'vault1' at /media/sf_New_Folder/test/api/vendor/doctrine/dbal/src/Driver/PDO/MySQL/Driver.php:33)"} []
[2024-04-24T05:14:35.569320+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T05:14:35.569632+00:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 1049): An exception occurred in the driver: SQLSTATE[HY000] [1049] Unknown database 'vault1' at /media/sf_New_Folder/test/api/vendor/doctrine/dbal/src/Driver/API/MySQL/ExceptionConverter.php:101)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 1049): SQLSTATE[HY000] [1049] Unknown database 'vault1' at /media/sf_New_Folder/test/api/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:28)\n[previous exception] [object] (PDOException(code: 1049): SQLSTATE[HY000] [1049] Unknown database 'vault1' at /media/sf_New_Folder/test/api/vendor/doctrine/dbal/src/Driver/PDO/MySQL/Driver.php:33)"} []
[2024-04-24T05:15:05.995694+00:00] request.INFO: Matched route "authentication_register". {"route":"authentication_register","route_parameters":{"_route":"authentication_register","_controller":"App\\Controller\\RegistrationController:register"},"request_uri":"http://localhost:8000/authentication/register","method":"POST"} []
[2024-04-24T05:15:06.053255+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T05:15:06.053351+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T05:15:06.061520+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T05:15:06.062220+00:00] php.INFO: User Deprecated: Since symfony/http-kernel 5.1: Referencing controllers with a single colon is deprecated. Use "App\Controller\RegistrationController::register" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/http-kernel 5.1: Referencing controllers with a single colon is deprecated. Use \"App\\Controller\\RegistrationController::register\" instead. at /media/sf_New_Folder/test/api/vendor/symfony/http-kernel/Controller/ContainerControllerResolver.php:39)"} []
[2024-04-24T05:15:06.479551+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T05:15:06.496971+00:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\ConnectionException: "An exception occurred in the driver: SQLSTATE[HY000] [1049] Unknown database 'vault1'" at /media/sf_New_Folder/test/api/vendor/doctrine/dbal/src/Driver/API/MySQL/ExceptionConverter.php line 101 {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 1049): An exception occurred in the driver: SQLSTATE[HY000] [1049] Unknown database 'vault1' at /media/sf_New_Folder/test/api/vendor/doctrine/dbal/src/Driver/API/MySQL/ExceptionConverter.php:101)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 1049): SQLSTATE[HY000] [1049] Unknown database 'vault1' at /media/sf_New_Folder/test/api/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:28)\n[previous exception] [object] (PDOException(code: 1049): SQLSTATE[HY000] [1049] Unknown database 'vault1' at /media/sf_New_Folder/test/api/vendor/doctrine/dbal/src/Driver/PDO/MySQL/Driver.php:33)"} []
[2024-04-24T05:15:06.517321+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T05:15:06.517811+00:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 1049): An exception occurred in the driver: SQLSTATE[HY000] [1049] Unknown database 'vault1' at /media/sf_New_Folder/test/api/vendor/doctrine/dbal/src/Driver/API/MySQL/ExceptionConverter.php:101)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 1049): SQLSTATE[HY000] [1049] Unknown database 'vault1' at /media/sf_New_Folder/test/api/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:28)\n[previous exception] [object] (PDOException(code: 1049): SQLSTATE[HY000] [1049] Unknown database 'vault1' at /media/sf_New_Folder/test/api/vendor/doctrine/dbal/src/Driver/PDO/MySQL/Driver.php:33)"} []
[2024-04-24T05:15:06.518464+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T05:15:06.518898+00:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 1049): An exception occurred in the driver: SQLSTATE[HY000] [1049] Unknown database 'vault1' at /media/sf_New_Folder/test/api/vendor/doctrine/dbal/src/Driver/API/MySQL/ExceptionConverter.php:101)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 1049): SQLSTATE[HY000] [1049] Unknown database 'vault1' at /media/sf_New_Folder/test/api/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:28)\n[previous exception] [object] (PDOException(code: 1049): SQLSTATE[HY000] [1049] Unknown database 'vault1' at /media/sf_New_Folder/test/api/vendor/doctrine/dbal/src/Driver/PDO/MySQL/Driver.php:33)"} []
[2024-04-24T05:15:25.082514+00:00] request.INFO: Matched route "authentication_register". {"route":"authentication_register","route_parameters":{"_route":"authentication_register","_controller":"App\\Controller\\RegistrationController:register"},"request_uri":"http://localhost:8000/authentication/register","method":"GET"} []
[2024-04-24T05:15:25.112927+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-24T05:15:25.113031+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T05:15:25.113077+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-24T05:15:25.169884+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-24T05:15:25.176371+00:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 1049): An exception occurred in the driver: SQLSTATE[HY000] [1049] Unknown database 'vault1' at /media/sf_New_Folder/test/api/vendor/doctrine/dbal/src/Driver/API/MySQL/ExceptionConverter.php:101)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 1049): SQLSTATE[HY000] [1049] Unknown database 'vault1' at /media/sf_New_Folder/test/api/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:28)\n[previous exception] [object] (PDOException(code: 1049): SQLSTATE[HY000] [1049] Unknown database 'vault1' at /media/sf_New_Folder/test/api/vendor/doctrine/dbal/src/Driver/PDO/MySQL/Driver.php:33)"} []
[2024-04-25T14:20:04.129791+05:30] php.DEBUG: Warning: filemtime(): stat failed for /media/sf_New_Folder/test/api/config/routes/dev/web_profiler.yaml {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":2,"file":"/home/kaliuser/New Folder/test/api/vendor/symfony/config/Resource/FileResource.php","line":62,"trace":[{"file":"/home/kaliuser/New Folder/test/api/vendor/symfony/config/Resource/SelfCheckingResourceChecker.php","line":34,"function":"isFresh","class":"Symfony\\Component\\Config\\Resource\\FileResource","type":"->"}],"count":1}}} []
[2024-04-25T14:20:04.371122+05:30] request.INFO: Matched route "index". {"route":"index","route_parameters":{"_route":"index","_controller":"App\\Controller\\DefaultController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2024-04-25T14:20:04.403777+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-25T14:20:04.404212+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-25T14:20:04.404470+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-25T14:20:04.487707+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-25T14:20:04.526754+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:20:04.533831+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-25T14:20:04.537219+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:20:04.537959+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-25T14:20:04.557590+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:20:04.558286+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T14:20:04.561329+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:20:04.562059+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T14:20:04.566083+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-25T14:20:04.573636+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:20:04.574474+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T14:20:04.579889+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-25T14:20:04.588457+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:20:04.673495+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-25T14:20:04.788690+05:30] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost:8000/favicon.ico" (from "http://localhost:8000/")" at /home/kaliuser/New Folder/test/api/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost:8000/favicon.ico\" (from \"http://localhost:8000/\") at /home/kaliuser/New Folder/test/api/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/kaliuser/New Folder/test/api/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2024-04-25T14:20:04.879939+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-25T14:20:04.882549+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:20:04.883642+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-25T14:20:04.885169+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:20:04.885956+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-25T14:20:04.888350+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:20:04.890371+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T14:20:04.893338+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:20:04.895430+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T14:20:04.898269+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-25T14:20:04.905183+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:20:04.906257+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T14:20:04.909774+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-25T14:20:04.914766+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:20:05.012453+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-25T14:20:23.935951+05:30] request.INFO: Matched route "index". {"route":"index","route_parameters":{"_route":"index","_controller":"App\\Controller\\DefaultController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2024-04-25T14:20:23.945883+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-25T14:20:23.946160+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-25T14:20:23.946322+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-25T14:20:23.968190+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-25T14:20:23.970277+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:20:23.971198+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-25T14:20:23.972545+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:20:23.973133+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-25T14:20:23.974688+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:20:23.975218+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T14:20:23.977703+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:20:23.978637+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T14:20:23.980602+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-25T14:20:23.985927+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:20:23.986821+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T14:20:23.989807+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-25T14:20:23.993915+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:20:24.046483+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-25T14:21:25.633050+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-25T14:21:25.634499+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:21:25.635068+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-25T14:21:25.636292+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:21:25.636846+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-25T14:21:25.638020+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:21:25.638579+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T14:21:25.640516+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:21:25.641070+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T14:21:25.642421+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-25T14:21:25.645837+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:21:25.646739+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T14:21:25.649361+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-25T14:21:25.653206+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:21:25.686421+05:30] request.INFO: Matched route "authentication_register". {"route":"authentication_register","route_parameters":{"_route":"authentication_register","_controller":"App\\Controller\\RegistrationController:register"},"request_uri":"http://localhost:8000/authentication/register","method":"POST"} []
[2024-04-25T14:21:25.690450+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-25T14:21:25.690670+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-25T14:21:25.691443+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-25T14:21:25.692789+05:30] php.INFO: User Deprecated: Since symfony/http-kernel 5.1: Referencing controllers with a single colon is deprecated. Use "App\Controller\RegistrationController::register" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/http-kernel 5.1: Referencing controllers with a single colon is deprecated. Use \"App\\Controller\\RegistrationController::register\" instead. at /home/kaliuser/New Folder/test/api/vendor/symfony/http-kernel/Controller/ContainerControllerResolver.php:39)"} []
[2024-04-25T14:21:25.705299+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-25T14:21:26.340604+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-25T14:21:26.342757+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.email = ? (parameters: array{"1":"justtesttest@gmail.com"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.email = ?","params":{"1":"justtesttest@gmail.com"},"types":{"1":2}} []
[2024-04-25T14:21:26.733638+05:30] doctrine.DEBUG: Beginning transaction [] []
[2024-04-25T14:21:26.738419+05:30] doctrine.DEBUG: Executing statement: INSERT INTO user (id, first_name, last_name, username, email, password, roles, registered_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":"|\u000bj�ÜN�R�\t2\u0005��","2":"himanshu","3":"mittal","4":"justtesttes","5":"justtesttest@gmail.com","6":"88i3kfKScZ8jl/+plQIxyQwu7TP3b0y8uqABQo6165Y=","7":"[\"ROLE_USER\"]","8":"2024-04-25 10:51:26"}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2}) {"sql":"INSERT INTO user (id, first_name, last_name, username, email, password, roles, registered_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":"|\u000bj�ÜN�R�\t2\u0005��","2":"himanshu","3":"mittal","4":"justtesttes","5":"justtesttest@gmail.com","6":"88i3kfKScZ8jl/+plQIxyQwu7TP3b0y8uqABQo6165Y=","7":"[\"ROLE_USER\"]","8":"2024-04-25 10:51:26"},"types":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2}} []
[2024-04-25T14:21:26.739429+05:30] doctrine.DEBUG: Committing transaction [] []
[2024-04-25T14:21:26.746676+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:21:26.747301+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-25T14:21:26.748126+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:21:26.748421+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-25T14:21:26.749246+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:21:26.749489+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T14:21:26.750274+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:21:26.750492+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T14:21:26.751109+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-25T14:21:26.753171+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:21:26.753506+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T14:21:26.754634+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-25T14:21:26.756792+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:21:26.828733+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-25T14:21:43.986102+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-25T14:21:43.988354+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:21:43.989394+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-25T14:21:43.990567+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:21:43.991282+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-25T14:21:43.993208+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:21:43.993868+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T14:21:43.995550+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:21:43.996287+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T14:21:43.997850+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-25T14:21:44.002201+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:21:44.003391+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T14:21:44.007031+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-25T14:21:44.011952+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:21:44.054152+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-25T14:21:44.075703+05:30] request.INFO: Matched route "authentication_login". {"route":"authentication_login","route_parameters":{"_route":"authentication_login"},"request_uri":"http://localhost:8000/authentication/login","method":"POST"} []
[2024-04-25T14:21:44.086245+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-25T14:21:44.086653+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-25T14:21:44.101528+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-25T14:21:44.102774+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.email = ? LIMIT 1 (parameters: array{"1":"justtesttest@gmail.com"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.email = ? LIMIT 1","params":{"1":"justtesttest@gmail.com"},"types":{"1":2}} []
[2024-04-25T14:21:44.325543+05:30] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"justtesttes\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\Authenticator"} []
[2024-04-25T14:21:44.326020+05:30] php.INFO: User Deprecated: Since symfony/security-bundle 5.3: Accessing the "security.token_storage" service directly from the container is deprecated, use dependency injection instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-bundle 5.3: Accessing the \"security.token_storage\" service directly from the container is deprecated, use dependency injection instead. at /home/kaliuser/New Folder/test/api/var/cache/dev/ContainerOhXnBO3/App_KernelDevDebugContainer.php:1965)"} []
[2024-04-25T14:21:44.333675+05:30] security.DEBUG: The "App\Security\Authenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\Authenticator"} []
[2024-04-25T14:21:44.337260+05:30] security.DEBUG: Stored the security token in the session. {"key":"_security_authentication"} []
[2024-04-25T14:21:44.339277+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:21:44.339851+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-25T14:21:44.340539+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:21:44.340805+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-25T14:21:44.341563+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:21:44.341906+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T14:21:44.342775+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:21:44.342969+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T14:21:44.343641+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-25T14:21:44.345725+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:21:44.346153+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T14:21:44.347375+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-25T14:21:44.349461+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:21:44.413011+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-25T14:21:44.547800+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-25T14:21:44.550570+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:21:44.552340+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-25T14:21:44.554860+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:21:44.556015+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-25T14:21:44.558753+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:21:44.559738+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T14:21:44.563404+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:21:44.564784+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T14:21:44.567667+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-25T14:21:44.574118+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:21:44.576354+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T14:21:44.580947+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-25T14:21:44.587721+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:21:44.644699+05:30] request.INFO: Matched route "vaults". {"route":"vaults","route_parameters":{"_route":"vaults","_controller":"App\\Controller\\VaultController:list"},"request_uri":"http://localhost:8000/vaults","method":"GET"} []
[2024-04-25T14:21:44.647786+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-25T14:21:44.647988+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-25T14:21:44.648114+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-25T14:21:44.649110+05:30] security.DEBUG: Read existing security token from the session. {"key":"_security_authentication","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2024-04-25T14:21:44.654182+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-25T14:21:44.654476+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-25T14:21:44.655677+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ? (parameters: array{"1":"|\u000bj�ÜN�R�\t2\u0005��"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ?","params":{"1":"|\u000bj�ÜN�R�\t2\u0005��"},"types":{"1":2}} []
[2024-04-25T14:21:44.662461+05:30] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"justtesttes"} []
[2024-04-25T14:21:44.666786+05:30] php.INFO: User Deprecated: Since symfony/http-kernel 5.1: Referencing controllers with a single colon is deprecated. Use "App\Controller\VaultController::list" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/http-kernel 5.1: Referencing controllers with a single colon is deprecated. Use \"App\\Controller\\VaultController::list\" instead. at /home/kaliuser/New Folder/test/api/vendor/symfony/http-kernel/Controller/ContainerControllerResolver.php:39)"} []
[2024-04-25T14:21:44.672331+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3 FROM vault t0 WHERE t0.user_id = ? (parameters: array{"1":"|\u000bj�ÜN�R�\t2\u0005��"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3 FROM vault t0 WHERE t0.user_id = ?","params":{"1":"|\u000bj�ÜN�R�\t2\u0005��"},"types":{"1":2}} []
[2024-04-25T14:21:44.678552+05:30] security.DEBUG: Stored the security token in the session. {"key":"_security_authentication"} []
[2024-04-25T14:21:44.681800+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:21:44.682596+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-25T14:21:44.684219+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:21:44.685036+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-25T14:21:44.686866+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:21:44.687581+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T14:21:44.689645+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:21:44.690211+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T14:21:44.691980+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-25T14:21:44.696995+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:21:44.697956+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T14:21:44.701345+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-25T14:21:44.704866+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:21:44.754568+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-25T14:22:06.161789+05:30] request.INFO: Matched route "vaults_create". {"route":"vaults_create","route_parameters":{"_route":"vaults_create","_controller":"App\\Controller\\VaultController::create"},"request_uri":"http://localhost:8000/vaults","method":"POST"} []
[2024-04-25T14:22:06.165340+05:30] security.DEBUG: Read existing security token from the session. {"key":"_security_authentication","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2024-04-25T14:22:06.170171+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-25T14:22:06.171132+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ? (parameters: array{"1":"|\u000bj�ÜN�R�\t2\u0005��"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ?","params":{"1":"|\u000bj�ÜN�R�\t2\u0005��"},"types":{"1":2}} []
[2024-04-25T14:22:06.174966+05:30] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"justtesttes"} []
[2024-04-25T14:22:06.175146+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-25T14:22:06.175254+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-25T14:22:06.175849+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-25T14:22:06.178886+05:30] doctrine.DEBUG: Beginning transaction [] []
[2024-04-25T14:22:06.179462+05:30] doctrine.DEBUG: Executing statement: INSERT INTO vault (id, data, user_id) VALUES (?, ?, ?) (parameters: array{"1":"�0P��`H\u0017��_���g�","2":"660256c0372dddbcbae5c76e5ba95e8c8d890ab3942919031fc5d699257c30e5cb51e564e6eb4446b247c06a8c89d5de436942aae9baa69eee745ec723a0454d","3":"|\u000bj�ÜN�R�\t2\u0005��"}, types: array{"1":2,"2":2,"3":2}) {"sql":"INSERT INTO vault (id, data, user_id) VALUES (?, ?, ?)","params":{"1":"�0P��`H\u0017��_���g�","2":"660256c0372dddbcbae5c76e5ba95e8c8d890ab3942919031fc5d699257c30e5cb51e564e6eb4446b247c06a8c89d5de436942aae9baa69eee745ec723a0454d","3":"|\u000bj�ÜN�R�\t2\u0005��"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-25T14:22:06.180291+05:30] doctrine.DEBUG: Committing transaction [] []
[2024-04-25T14:22:06.186221+05:30] security.DEBUG: Stored the security token in the session. {"key":"_security_authentication"} []
[2024-04-25T14:22:06.188698+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:22:06.189340+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-25T14:22:06.190310+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:22:06.190546+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-25T14:22:06.191736+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:22:06.192379+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T14:22:06.193743+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:22:06.194258+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T14:22:06.195209+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-25T14:22:06.197579+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:22:06.198212+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T14:22:06.200231+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-25T14:22:06.203047+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:22:06.243330+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-25T14:22:09.132071+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-25T14:22:09.133433+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:22:09.134125+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-25T14:22:09.135094+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:22:09.135718+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-25T14:22:09.136412+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-25T14:22:09.137164+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:22:09.137465+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:22:09.137618+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T14:22:09.137948+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-25T14:22:09.138725+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:22:09.138784+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:22:09.138980+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-25T14:22:09.139045+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T14:22:09.139996+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:22:09.139962+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-25T14:22:09.140661+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T14:22:09.141942+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:22:09.142354+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T14:22:09.143107+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-25T14:22:09.143616+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:22:09.144196+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T14:22:09.145667+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:22:09.146080+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T14:22:09.146272+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-25T14:22:09.147543+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-25T14:22:09.149303+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:22:09.150153+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:22:09.181845+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-25T14:22:09.184522+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-25T14:22:09.197796+05:30] request.INFO: Matched route "categories". {"route":"categories","route_parameters":{"_route":"categories","_controller":"App\\Controller\\CategoryController:list"},"request_uri":"http://localhost:8000/categories","method":"GET"} []
[2024-04-25T14:22:09.198933+05:30] request.INFO: Matched route "vaults_items". {"route":"vaults_items","route_parameters":{"_route":"vaults_items","_controller":"App\\Controller\\VaultController::listItems","id":"cb3050c1-a960-4817-8cf3-5f96ac86678a"},"request_uri":"http://localhost:8000/vaults/cb3050c1-a960-4817-8cf3-5f96ac86678a/items","method":"GET"} []
[2024-04-25T14:22:09.200232+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-25T14:22:09.200407+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-25T14:22:09.200524+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-25T14:22:09.201212+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-25T14:22:09.201377+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-25T14:22:09.201493+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-25T14:22:09.201562+05:30] security.DEBUG: Read existing security token from the session. {"key":"_security_authentication","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2024-04-25T14:22:09.206220+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-25T14:22:09.207313+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ? (parameters: array{"1":"|\u000bj�ÜN�R�\t2\u0005��"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ?","params":{"1":"|\u000bj�ÜN�R�\t2\u0005��"},"types":{"1":2}} []
[2024-04-25T14:22:09.213320+05:30] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"justtesttes"} []
[2024-04-25T14:22:09.214852+05:30] php.INFO: User Deprecated: Since symfony/http-kernel 5.1: Referencing controllers with a single colon is deprecated. Use "App\Controller\CategoryController::list" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/http-kernel 5.1: Referencing controllers with a single colon is deprecated. Use \"App\\Controller\\CategoryController::list\" instead. at /home/kaliuser/New Folder/test/api/vendor/symfony/http-kernel/Controller/ContainerControllerResolver.php:39)"} []
[2024-04-25T14:22:09.217782+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4 FROM category t0 WHERE t0.user_id = ? (parameters: array{"1":"|\u000bj�ÜN�R�\t2\u0005��"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3, t0.vault_id AS vault_id_4 FROM category t0 WHERE t0.user_id = ?","params":{"1":"|\u000bj�ÜN�R�\t2\u0005��"},"types":{"1":2}} []
[2024-04-25T14:22:09.223164+05:30] security.DEBUG: Stored the security token in the session. {"key":"_security_authentication"} []
[2024-04-25T14:22:09.225705+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:22:09.226291+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-25T14:22:09.227169+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:22:09.227684+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-25T14:22:09.229166+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:22:09.229714+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T14:22:09.230925+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:22:09.231172+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T14:22:09.232365+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-25T14:22:09.235024+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:22:09.235555+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T14:22:09.237003+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-25T14:22:09.239141+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:22:09.241456+05:30] security.DEBUG: Read existing security token from the session. {"key":"_security_authentication","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2024-04-25T14:22:09.245546+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-25T14:22:09.246850+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ? (parameters: array{"1":"|\u000bj�ÜN�R�\t2\u0005��"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ?","params":{"1":"|\u000bj�ÜN�R�\t2\u0005��"},"types":{"1":2}} []
[2024-04-25T14:22:09.251620+05:30] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"justtesttes"} []
[2024-04-25T14:22:09.280223+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-25T14:22:09.301200+05:30] doctrine.DEBUG: Executing statement: SELECT l0_.id AS id_0, l0_.data AS data_1, n1_.id AS id_2, n1_.data AS data_3, l0_.user_id AS user_id_4, l0_.vault_id AS vault_id_5, l0_.category_id AS category_id_6, n1_.user_id AS user_id_7, n1_.vault_id AS vault_id_8, n1_.category_id AS category_id_9 FROM vault v2_ LEFT JOIN login l0_ ON (l0_.vault_id = v2_.id) LEFT JOIN note n1_ ON (n1_.vault_id = v2_.id) WHERE v2_.id = ? AND v2_.user_id = ? (parameters: array{"1":"�0P��`H\u0017��_���g�","2":"|\u000bj�ÜN�R�\t2\u0005��"}, types: array{"1":2,"2":2}) {"sql":"SELECT l0_.id AS id_0, l0_.data AS data_1, n1_.id AS id_2, n1_.data AS data_3, l0_.user_id AS user_id_4, l0_.vault_id AS vault_id_5, l0_.category_id AS category_id_6, n1_.user_id AS user_id_7, n1_.vault_id AS vault_id_8, n1_.category_id AS category_id_9 FROM vault v2_ LEFT JOIN login l0_ ON (l0_.vault_id = v2_.id) LEFT JOIN note n1_ ON (n1_.vault_id = v2_.id) WHERE v2_.id = ? AND v2_.user_id = ?","params":{"1":"�0P��`H\u0017��_���g�","2":"|\u000bj�ÜN�R�\t2\u0005��"},"types":{"1":2,"2":2}} []
[2024-04-25T14:22:09.312581+05:30] security.DEBUG: Stored the security token in the session. {"key":"_security_authentication"} []
[2024-04-25T14:22:09.315400+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:22:09.316085+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-25T14:22:09.317381+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:22:09.318077+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-25T14:22:09.319557+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:22:09.320258+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T14:22:09.321924+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:22:09.322499+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T14:22:09.323949+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-25T14:22:09.326564+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:22:09.327145+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T14:22:09.328798+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-25T14:22:09.331230+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:22:09.367179+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-25T14:22:46.093554+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-25T14:22:46.094950+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:22:46.095699+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-25T14:22:46.096673+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:22:46.097238+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-25T14:22:46.098612+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:22:46.098999+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T14:22:46.100076+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:22:46.100697+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T14:22:46.101707+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-25T14:22:46.103991+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:22:46.104404+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T14:22:46.106009+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-25T14:22:46.108439+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:22:46.134672+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-25T14:22:46.169298+05:30] request.INFO: Matched route "logins_create". {"route":"logins_create","route_parameters":{"_route":"logins_create","_controller":"App\\Controller\\LoginController::create"},"request_uri":"http://localhost:8000/logins","method":"POST"} []
[2024-04-25T14:22:46.172413+05:30] security.DEBUG: Read existing security token from the session. {"key":"_security_authentication","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2024-04-25T14:22:46.176732+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-25T14:22:46.178114+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ? (parameters: array{"1":"|\u000bj�ÜN�R�\t2\u0005��"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.id = ?","params":{"1":"|\u000bj�ÜN�R�\t2\u0005��"},"types":{"1":2}} []
[2024-04-25T14:22:46.182193+05:30] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"justtesttes"} []
[2024-04-25T14:22:46.182382+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-25T14:22:46.182482+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-25T14:22:46.183118+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-25T14:22:46.186697+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3 FROM vault t0 WHERE t0.id = ? (parameters: array{"1":"�0P��`H\u0017��_���g�"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.data AS data_2, t0.user_id AS user_id_3 FROM vault t0 WHERE t0.id = ?","params":{"1":"�0P��`H\u0017��_���g�"},"types":{"1":2}} []
[2024-04-25T14:22:46.187937+05:30] doctrine.DEBUG: Beginning transaction [] []
[2024-04-25T14:22:46.188649+05:30] doctrine.DEBUG: Executing statement: INSERT INTO login (id, data, user_id, vault_id, category_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"}d�\u0006\u001dLOZ�e\u0004��H��","2":"60fd1852902d834dbad3e12ff4f77970803486169e266f9bde6ac42a35ffdcd465e63e31e818136be95aa881b6ab31bc69771471e43b65aa7ff066f04ae079980c02af456e8765601e850ca5d42e2a046f483aae62dfa150a065c7cc782b11fce659cbb3806e0e0cedabc95bd5ad8d0c149e6fa5d4cbfbf641732094a43b249d0242ee13d81dcb44bab4b32750cd3df46f283aadef4e92fca5e3d8aa626a7970cef0f226fe5af8a9cbd0e0dd1376b448332ded8f4b9f091b83fd90f4a78ccd8d120da25c6a982ee9343ababaaa793a07131dbbc37f6cc993006128ea109162bf09896f95a2fdf6e15c51ea07e3931013081edc1c50b14913daeca72093a06078","3":"|\u000bj�ÜN�R�\t2\u0005��","4":"�0P��`H\u0017��_���g�","5":null}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2}) {"sql":"INSERT INTO login (id, data, user_id, vault_id, category_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"}d�\u0006\u001dLOZ�e\u0004��H��","2":"60fd1852902d834dbad3e12ff4f77970803486169e266f9bde6ac42a35ffdcd465e63e31e818136be95aa881b6ab31bc69771471e43b65aa7ff066f04ae079980c02af456e8765601e850ca5d42e2a046f483aae62dfa150a065c7cc782b11fce659cbb3806e0e0cedabc95bd5ad8d0c149e6fa5d4cbfbf641732094a43b249d0242ee13d81dcb44bab4b32750cd3df46f283aadef4e92fca5e3d8aa626a7970cef0f226fe5af8a9cbd0e0dd1376b448332ded8f4b9f091b83fd90f4a78ccd8d120da25c6a982ee9343ababaaa793a07131dbbc37f6cc993006128ea109162bf09896f95a2fdf6e15c51ea07e3931013081edc1c50b14913daeca72093a06078","3":"|\u000bj�ÜN�R�\t2\u0005��","4":"�0P��`H\u0017��_���g�","5":null},"types":{"1":2,"2":2,"3":2,"4":2,"5":2}} []
[2024-04-25T14:22:46.190448+05:30] doctrine.DEBUG: Committing transaction [] []
[2024-04-25T14:22:46.195798+05:30] security.DEBUG: Stored the security token in the session. {"key":"_security_authentication"} []
[2024-04-25T14:22:46.198279+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:22:46.198844+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-25T14:22:46.199743+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:22:46.200289+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-25T14:22:46.201395+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:22:46.201831+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T14:22:46.202806+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:22:46.203024+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T14:22:46.203761+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-25T14:22:46.206099+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:22:46.206639+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T14:22:46.208010+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-25T14:22:46.210369+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T14:22:46.249448+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-25T15:26:16.640259+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-25T15:26:16.654445+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T15:26:16.664438+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-25T15:26:16.668048+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T15:26:16.668829+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-25T15:26:16.691135+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T15:26:16.691844+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T15:26:16.694975+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T15:26:16.695475+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T15:26:16.697826+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-25T15:26:16.704136+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T15:26:16.704803+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T15:26:16.710187+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-25T15:26:16.719152+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T15:26:16.781592+05:30] request.INFO: Matched route "authentication_register". {"route":"authentication_register","route_parameters":{"_route":"authentication_register","_controller":"App\\Controller\\RegistrationController:register"},"request_uri":"http://localhost:8000/authentication/register","method":"POST"} []
[2024-04-25T15:26:16.814756+05:30] security.DEBUG: Checking for authenticator support. {"firewall_name":"authentication","authenticators":1} []
[2024-04-25T15:26:16.814954+05:30] security.DEBUG: Checking support on authenticator. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-25T15:26:16.815720+05:30] security.DEBUG: Authenticator does not support the request. {"firewall_name":"authentication","authenticator":"App\\Security\\Authenticator"} []
[2024-04-25T15:26:16.817193+05:30] php.INFO: User Deprecated: Since symfony/http-kernel 5.1: Referencing controllers with a single colon is deprecated. Use "App\Controller\RegistrationController::register" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/http-kernel 5.1: Referencing controllers with a single colon is deprecated. Use \"App\\Controller\\RegistrationController::register\" instead. at /home/kaliuser/New Folder/test/api/vendor/symfony/http-kernel/Controller/ContainerControllerResolver.php:39)"} []
[2024-04-25T15:26:16.823577+05:30] doctrine.INFO: Disconnecting [] []
[2024-04-25T15:26:17.314481+05:30] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"serverVersion":"10.4.32-MariaDB - Source","defaultTableOptions":{"collation":"utf8mb4_unicode_ci"},"dbname":"vault1","charset":"utf8mb4"}} []
[2024-04-25T15:26:17.315889+05:30] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.email = ? (parameters: array{"1":"just1@gmail.com"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.first_name AS first_name_2, t0.last_name AS last_name_3, t0.username AS username_4, t0.email AS email_5, t0.password AS password_6, t0.roles AS roles_7, t0.registered_at AS registered_at_8 FROM user t0 WHERE t0.email = ?","params":{"1":"just1@gmail.com"},"types":{"1":2}} []
[2024-04-25T15:26:17.567119+05:30] doctrine.DEBUG: Beginning transaction [] []
[2024-04-25T15:26:17.572680+05:30] doctrine.DEBUG: Executing statement: INSERT INTO user (id, first_name, last_name, username, email, password, roles, registered_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":"\u001e�'��@���_n��","2":"newways","3":"test","4":"justtest","5":"just1@gmail.com","6":"M+L2r0DeC4b++HWFS7d6+MHNgoqa1UeE9UpL5D2TPd0=","7":"[\"ROLE_USER\"]","8":"2024-04-25 11:56:17"}, types: array{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2}) {"sql":"INSERT INTO user (id, first_name, last_name, username, email, password, roles, registered_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":"\u001e�'��@���_n��","2":"newways","3":"test","4":"justtest","5":"just1@gmail.com","6":"M+L2r0DeC4b++HWFS7d6+MHNgoqa1UeE9UpL5D2TPd0=","7":"[\"ROLE_USER\"]","8":"2024-04-25 11:56:17"},"types":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2}} []
[2024-04-25T15:26:17.573691+05:30] doctrine.DEBUG: Committing transaction [] []
[2024-04-25T15:26:17.582333+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T15:26:17.582861+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-25T15:26:17.583648+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T15:26:17.583980+05:30] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"vault1"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"vault1"},"types":{"1":2}} []
[2024-04-25T15:26:17.584823+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T15:26:17.585197+05:30] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T15:26:17.586351+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T15:26:17.586812+05:30] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'vault1' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T15:26:17.587654+05:30] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n           IF(\n        c.COLUMN_TYPE = 'longtext'\n        AND EXISTS(\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\n            WHERE i_c.CONSTRAINT_SCHEMA = 'vault1'\n            AND i_c.TABLE_NAME = c.TABLE_NAME\n            AND i_c.CHECK_CLAUSE = CONCAT(\n                'json_valid(`',\n                    c.COLUMN_NAME,\n                '`)'\n            )\n        ),\n        'json',\n        c.COLUMN_TYPE\n    )       AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"vault1","2":"vault1","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-04-25T15:26:17.589868+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T15:26:17.590280+05:30] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"vault1","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"vault1","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-04-25T15:26:17.591707+05:30] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-04-25T15:26:17.594067+05:30] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-04-25T15:26:17.659406+05:30] doctrine.INFO: Disconnecting [] []
